
00:00
hi this is a six plus hour javascript review we cover everything
from what is programming all the way through functions variables loops
conditionals apis objects all the goods that you need
to be ready to move into back-end web development using
node my name is leon i run a 30-week free software engineering bootcamp where
you can go from zero experience to all the skills that you need to get a job
we've had hundreds of folks get jobs and most recently our current cohort has
brought in over a half a million dollars in client work already
so if you're interested in learning how to code you're interested in joining
community is 33 000 plus strong on discord where you can get your questions
answered you can learn for free and ultimately get a job as a software

00:01
engineer you found the right spot alrighty folks we're going to jump right
into the beginnings of programming we're going to go into
the basics the big four of javascript we're going to take our our breaks at
the top of each hour so if you need to take a break that's okay
but know that we'll take breaks at the top of every hour cool alrighty folks
a computer will do what you tell it to do a computer will do what you tell it to
do a program is simply what chat what's a program what's a program yeah
a program instead of instructions that you write to tell a computer what to do
right it's just a set of instructions therefore programming is the task of

00:02
writing those instructions in a language that the computer can
actually understand now we're all learning a language
together called javascript but the computer really can't understand
javascript it has to be broken down into
something that the computer can actually understand and so next week we're
actually going to see how that breaking down happens and
how javascript is able to actually run on our computers cool
so let's start off with this idea of a simple circuit okay simple circuit
i'm gonna have a wire that connects to a battery this battery
is then connected back to the light bulb and with this circuit on and complete

00:03
the light bulb would turn on now what i want to do is i want to introduce
i want to introduce a switch to this circuit i have my battery
and here is my switch techie uh we are this is not a class
this is our review so we're doing a full javascript review everything that we've
covered in javascript up to this point we're doing as part of a review uh
our office hours and reviews are always on twitch for 60 days uh immediately
cool all right so here we have a circuit with a simple
switch the switch is open so is the light bulb on is the light bulb shining

00:04
at this moment circuit's not complete so light bulb's not on so
let's go ahead and close the switch and now the switch is closed
the light bulb comes on nice so if i wanted to represent this switch
uh what's an easy way for me to represent this switch
how can i talk about this switch yeah i can talk about is on and off
or opening close right so on or off or open and close however that on and off
right right on or off or open or close that's too long to type
i want something simple what i'm gonna say is if the circuit is off or open

00:05
i'm going to say zero and if the circuit is closed
all right the circuit is closed i'm going to say one
so right now i can represent this circuit as what
what can i do to represent this circuit at the moment yeah this is one
since right now right because right now this mach this circuit is closed and
it is on i can represent this with the number one all right
now let's go ahead and add a little bit more complexity here let's have two

00:06
switches boom there we go how could i represent this circuit yeah zero zero nice
these are both open i could say zero zero nice how about if i closed
the switches now what are we at we're at one one nice and how could i describe
like when i say this circuit right here when i say 1-1 that's actually a fancy
word for saying this one blank this one are closed
when i see one one what's a that's a fancy way of saying what
yeah it's a fancy way of saying and right and so very very quickly we can
start to see all right if we combine some of these very simple notions right
multiple open and closed circuits we could start to build up to some very

00:07
very simple logic now this is like a very simplified example there's more detail
to be had here but the idea is that from just representing these on or off
values right whether or not our circuits
are open or closed we can start to build up to some very simple right
some very simple logic and then from this logic right from this logic
we can start to build up a rudimentary language we can then add some memory we
can add some arithmetic logic we can start to add all these kind of simple
pieces together and build up a computer that can listen to the
instructions we give it right and so the idea here is that we
have these lovely little bits of logic that we can start to use to build up
into more and more complex ideas now in the past we talked about

00:08
we've talked about independence day as a true story
why is independence day a true story i'm bub yeah binary upload boom so
if you if you if you missed our class or if you have never watched uh the
legendary film independence day uh what we have is aliens come
and when the aliens come we actually have a spaceship in roswell
that like turns on so we know like this proximity and maybe
communications is tied to power in some way shape or form because when the
motherships come the ship that we have gets powered
and we're trying to nuke the ships nothing's working
the shields keep blocking our nukes and so jeff goldblum saves the world by

00:09
doing what yeah they uh they they upload a virus
and the virus brings down the shields long enough for us the nuke the uh
the uh the aliens out of orbit so how can we write a computer virus in a
language that we probably don't understand right i don't think the
the the aliens were using javascript maybe they were right but uh the aliens
were using some language that we had to reverse engineer and so jeff goldblum to
save the world took that language reversed engineered it all the way down
to the zeros and ones the ons are off we are assuming that on and off
is a universal constant right like the idea that something could be on or
something can be off and that we can build up the simple logic from those on

00:10
and off values and from the simple logic we can start to build a a language that
works with these alien ships and so jeff
goldblum reversed engineered all the way down to the zeros and ones built up a
virus that we then injected into the alien mothership we know the alien
mothership is constantly communicating with all the other ships because when
the ship showed up our ship in roswell turned on so that virus on the mother
ship got infecting all the other ships around the world their shields came down
we nuked them america spoiler [Music] right
and so we're able to realize that all right this idea of on and off values
building up to more complex logic well that may one day
help us stop an alien invasion but it also forms this beginning idea that hey

00:11
we can from these base ideas to this base logic we can build all the
way up to a language that then we as humans can use and understand and so the
language that we use throughout this course is javascript it is a language
that can run both not only in the front end the code that runs in our browsers
but also the backend the code that runs on our servers and so we can learn one
language that can help us build full stack web applications and that can be
broken down into something that the computer can understand so
since we are trying to get jobs as quickly as possible we use javascript so
we don't have to do that context switching sometimes if you learn another
language not only do you need to know javascript to work in the browser but
you also need ruby or python on the back end well we kind of stop that we go
straight to javascript we say all right another javascript on the front and back

00:12
end it's going to help us get into jobs as quickly as possible cool
now when we're writing javascript javascript has a specific
syntax a spelling or grammar rules that we have to follow when we're writing
that language we're going to see a lot of special characters they might not use
on a regular basis semicolons brackets parentheses
quotation marks and other unique characters that come up over and over again
um so i like to show that syntax real quick
just in the inspector i'm going to open up an inspector
i'm just going to open up my console and for most of you who have seen these
already we worked with these a lot but just it's just helpful to to review them
so less than and greater than our carrots um that are kind of the arrows
we have our dot for dot notation we have our square brackets which we use

00:13
a lot with arrays or even accessing objects which we'll see a little bit later
we have our curly braces our figure brackets
we have our question marks for ternaries we have our double
forward slash the comment stuff out we have our
colons which we'll see happen a lot specifically with the ternaries as well
semicolons what used to be used at the end of each line but not really super
used anymore we got our single quotes our double
quotes we also have uh if we kind of go up above the quotes we have double pipe
character for or that's typically above your enter key so we say or
we have hyphen for subtraction we have our parentheses
uh we have our asterisk for multiplication we have our double ampersand for and
we have our percent sign for modulus which is how we get a remainder
we have our dollar sign which we call bling which we'll be using with things

00:14
like template literals we have our octothorpes we have our bangs so we
don't really call them uh excavation points we call them bangs and bang in
javascript typically represents not so you can say like not equal
we have our plus sign for uh addition our equal sign for assignment it's an
assignment operator when it's just one and then when it's two or three it's a
what let's see if people can remember this before we get to reviewing it
one equal sign is an assignment operator but two or three is what
yeah comparison exactly nice i love it cool um what else we got we got ticks
and i think that's about it so there's so many other little characters
that might come up too but just want to show those again and so over today we'll
see most of these put into action and so if you've never used them before that's

00:15
okay we'll see them when they come up but i like to show these because you're
gonna notice that all those keys are on the accessory of like on the
peripheral of your keyboard which means even if you're like elite gamer and you
you you you game every day you're on your keyboard keyboard every day
you're still not hitting those outside keys that's a lot of flexion
it's a lot of tension it's a lot of things that you're doing
repetitive stress to your hands please when we take our breaks at the
top of the hour give your hands that rest right give
your hands that stretch run them in any warm water
follow the guidelines of dr levi the fitness doctor
you can find that on discord they have a whole video on how to like take care of
your hands please take care of your hands cool
all right in the spirit of taking the break at the top of the hour being
respectful to our hands that's what we're gonna do when we come back we're

00:16
jumping into the first of the big four which are variables
all right folks let's go and take our break five minutes on the clock when we
come back we're gonna talk about variables and jump in the big four we're
gonna start writing some javascript code i'm excited to have you i'm glad we're

00:17
here for the super review let's get it right there are scenarios where
you might use state case or some other casing
you'll see that i'll use camel casing throughout all of my code it's in my
html it's in my css it's in my javascript right i just got the camel the hump
start the capture at some exactly uh but i feel like for most of the program you
should probably stick to camel casing because that's what you'll see me do the
most but once you join a company or a different team they might use a

00:18
different type of casing and you'll switch to that whatever it may be so no
right or wrong way i just think camelcasing's helpful helps you helps
you across html css and javascript and so whatever you pick just be consistent
with it cool now we have this way of storing stuff
into memory right we have these we have these data buckets but what
can actually go in these buckets well we can put strings in there or pieces of
text and in javascript there's a few ways to create pieces of text you can have
text surrounded by double quotes single quotes and what else what's the
last way that we can create a string we've all seen double quotes and single
quotes before what else yeah ticks we can use back ticks and that's
how we can get into things like template
literals template strings we have we use backtick so the trick when dealing with

00:19
strings is that whatever you use on the outside you can't use on the inside so
you can have single quotes on the outside and double quotes on the inside
or double quotes on the outside and single quotes on the inside but you
can't mix and match because that's where your string would end so if
we were to go ahead and kind of mimic this this day purchased it
i'm gonna go ahead and open up my console here i'm gonna say
uh they purchased it so the first way they had it is with single quotes they
purchase it right single quotes on the outside of
closing inside perfectly fine however if
we did double quotes on the outside they you can see that right away
it's trying to create two strings right the string ended right here
it didn't it did it wasn't able to see that oh you wanted this to be quoted

00:20
what it does see is like oh this is where the first string ends here's where
another string is created and then what is javascript going to try and look up
purchased as what is it going to try and repurchased as here
yeah it's going to try and read it as a variable so we can do something special
though there's one way you can get around this and this is with escaping
we put this lovely forward slash sorry this lovely backslash in front of
our quotes on the inside and when we hit enter you can see that
we still have the the they purchased it it works because we have escaped the
double quotes all right we've escaped the double
quotes so remember whatever you use on the inside
you can't use on the outside unless you escape them cool

00:21
we can also put numbers into our data buckets or our variables
there are a couple different types of numbers that we have in javascript first
we'll talk about integers which are kind of like our whole numbers there's also
floated values which are numbers with decimal places
you can have side numbers both positive and negative and you can have side
numbers on both your your integers and your floated values
and we can do basic arithmetic with the values that get put into these
variables so the numbers that we have access to
we can do basic arithmetic with those numbers uh addition with the plus sign
subtraction with the hyphen multiplication with our asterisk
division with our forward slash and if you want the remainder you can use
modulus so 10 mod 6 would give us what chat and mod 6 would give us what

00:22
yeah give us four exactly we give us four nice
because six goes into ten one time there's four left over it's the remainder
cool all right in today's materials if you need the materials remember you
gotta join our discord agree to the rules and in the follow materials
channel you'll get all the starter code for today so
if you go ahead and grab that file if you haven't already you'll notice that
there is a variable fun time folder here i'm going to open up variable fun time
in my vs code you'll notice that i just opened the entire folder right i just
opened the entire folder in my vs code and i'm just going to kind of go
into each individual folder throughout the day so we have this variable fun time
which has some easy variable assignments some medium and then a more difficult
one let's go ahead and put let's say five minutes on the clock here
five minutes on the clock we'll see how far we can get in those five minutes

00:23
then we're going to go over it together remember today's review so this is your
first time joining us that's okay if you
if these are a little bit difficult give it your best and then we're going to go
over it together remember it's we get more out of analysis than we do often
trying to solve all right five minutes on the clock you got this dig deep boom
variable fun time is the folder can we do discounted hydration today uh no
because you all getting too many channel points it's too wild in these streets
uh where can you download this from it's on our discord follow materials channel

00:24
exclamation point discord if you're not on discord yet
either one that's on your end yeah it's on your unfortunately

00:25
all right you got this folks dig deep we'll go over it together
well office bowers be a vaude everything is always a vod here on twitch for 60
days automatically you can always come back
i've been trying to do much better with youtube so pretty much every the next
day everything will be on youtube we do have a one day delay due to being
partnered on twitch so i try to get it on youtube the next day the wonderful
thing about watching on youtube is that my youtube channel is not monetized at
all so you can watch the full however long this goes without ads
vanessa do exclamation point slides and i'll give you the link to the slides for

00:26
today [Music] uh gaming is on the follow along materials channel
make sure you agree to the rules first or else you won't see the channels
bro dang i think i actually did it hey congrats bro it's awesome

00:27
on the first try hey taco you probably didn't agree to the rules then
uh my anki sessions every day take about
one one to two hours is that too much um i think it depends on where you're at i
think if you're still actively adding cards one to two hours can be hit i
really i really shoot for like half an hour to half an hour to an hour
but every person person's different and how much review they want to do if you
feel like you're still getting a lot of value out of it then sure keep it up but
if you don't feel like you're getting as much value you can definitely
reduce your car like your deck size so that you have less to review
jason derulo hey thank you for the fire get the subs hope you're doing well
thank you for being here eric this is uh the variable fun time folder
hey jason rulo can i restart my anki album algorithm so i can start from the
beginning you can you can just create a new study deck and

00:28
that'll do it from the beginning for you do
alrighty folks come on back come on back let's try doing this together
i've been so focused on what i still have to learn that i forgot how far
we've come made a super simple custom link tree for my husband's business
you're so impressed texting it everybody knows that's awesome hey i think that's
really important you got to realize that if you've been with us since the
beginning you have some tremendous phenomenal skills that you can be put
into practice right now i love that it's huge
cool all right folks let's take a look at this together
all right create a variable and assign it a number

00:29
so let's just go ahead and create a variable called num let num equal
i'm going to say like 15 15 create a variable and assign a number
so we've created our variable or declared our variable here assign it the
value of 15 nice minus 10 from that number so it's going to do num
equals num minus minus 10. what are some other things we could do to subtract 10
i did num equals num minus 10 what else could i have done
yeah okay also the minus equals so i could do num
minus equals 10 that would have also worked cool
it's up to you which way you want to go a little bit more readable
all right so we did num equals num10 print that number to the console so

00:30
whenever i say print to the console in javascript what do i mean by that chat
yeah console.log nice console.log and we're going to throw in num
if we were to open this in the browser we'd be able to see that console log
come through so if we go to my index.html here what i'm going to look for
before i before i even try and open this what what am i looking for to make sure
that my javascript will run what am i looking for to make sure that
my javascript will run yeah i'm looking at that source the
script so i have the script type javascript source equals javascript
slash main.js and so if we look my main.js is inside of a javascript folder
so this route looks correct like this this is a correct source here so if i
was to go ahead and open this in my browser and open up the inspector
and we looked at this lovely console boom we can see five being logged to the

00:31
console and that looks good to me alrighty let's keep pushing here
create a variable that holds a value from the input
add 25 to that number alert the number all right so how can we get the value
out of an input out of an input not not like an
alert prompt or anything like that out of an input that's already in the dom
yeah we can use our our query selector with the value so
let's go ahead and say let um num from input equal

00:32
and then we're gonna do our document dot query selector
and we're going to grab it from the input so i'm just going to say input
and i want the value out of that input let's go take a look real quick let's
make sure there's only one input on the page
there's only one input on the page if i want it to be more specific
to be more specific let's say we don't know if anybody else on our team
is going to add more inputs what could we use
dance dance revolution exactly we could grab this id here if we want it
let's go back instead of it just being the input we can do
dance dance revolution beautiful and uh what am i missing here
what am i missing here there's something i'm missing right here
yeah i need the octothorpe because it's an i d great that's gonna say hey

00:33
go into the dom or the document find something that has the idea of
dance dance revolution and then get the value out of it
and so when i say the document that's often something very tricky for folks to
understand what's happening when you're seeing something in your browser
is that you have received an html file a css file maybe some javascript files
and your browser reads all those files and makes a rendering that you see in
your browser so it's not an exact copy of your html it's not an exact copy of
your css it's kind of like a painter that's looking at it at its beautiful
model and then paints that model right you would never say that the painting is
the model it is a rendering of the model and so the beautiful thing here is when
we're in the browser the browser reads the html file it reads the css file and

00:34
paints a drawing or paints a render well
javascript can come along and get access to that render and so when i say
document i'm saying hey give me access to that rendering of the html and css
look inside that rendering for something that has the idea of dance dance
revolution and give me the value that it has
all right give me the value that it has and so i think this is one of the most
tricky bits when folks are first learning javascript is that they'll look
at this they'll go to like their inspector they'll look in the elements and they
they look at this and they think that this is the html
this is not the html what is this chat what is this here
this is the dom it's that rendering right like if if grandma was gonna make some

00:35
soup right grandma has a recipe for famous famous tofu soup it's tofu water
and salt and so we're making grandma's famous tofu soup right
and then i have a jerk of a cousin that comes along and throws a tomato
into the soup does grandma's recipe like like automatically update
right like do we see like grandma that's really dark
grandma from the beyond like updates the recipe to include the the tomato
no right like this is just the rendering of the recipe
this is just the rendering of the recipe we could

00:36
dump out this soup and then paint a new rendering right we could just read
the we could just read the instructions again all right we can just read the
instructions again and rebuild the soup it's the same thing with what we're
seeing in the browser we read the html we read the css and we
built our soup our rendering of the recipe our rendering of those files
and javascript is our what javascript is our what
javascript is our jerk of a cousin that can come along
and throw the tomato into the mix our jerk of a cousin could make this red or
jerk of a cousin can like remove this our jerk of a cousin could like put
something in the input right but as soon as we refresh the page

00:37
all of that stuff goes away and we re-read the recipe we reread the html
reread the css and build what we see so javascript can always manipulate the dom
but the dom is the rendering that we have from the beginning cool
all right so we got the the value or the number from the input
what's the thing that we know that we should always do when we're trying to
get numbers we're trying to get numbers specifically
we're trying to get numbers from the dom what's something that we should always
do yeah make sure that we actually have a number
exactly so i'm gonna wrap this in a number and i'm gonna make sure that we make
sure that we actually have a number and so i wrapped this document that query
selector dance dance revolution which i am a b step by the way when do we got to
do a ddr stream uh i don't get the value

00:38
out and then i'm going to make sure that that value is actually a number that's
all it's going to do is make sure we actually have a number pokemon said proof
let's just say max steps when the saints go marching in is not for the faint of
heart alright so now we know that we've gotten the value out of the input
we know that it's a number i feel a little bit more confident
adding to that now that i know we have a number so i'm going to do num
from input plus equals 25. i like this a little bit better because
i know that i'm dealing with a number here charlie's been holding ddr dancehalls

00:39
are you talking about oh yeah like um uh moist critical right
i think it was him in uh i figured what their name is emeru we're doing it
boys got some moves i saw the i saw the i saw the moves that they
they know what they're doing they were hitting they're hitting it
they knew what they were doing i i thought they were i thought it was cap
but now boys showed up put in the work all right
we got we got 25 we added 25 to the number we got from the input and we want
to alert this number alert num from input beautiful
what if the number is not numerical then we're screwed uh but it's not something
we could definitely control for but this is just kind of this is just for us to

00:40
to review the concepts yeah but yeah this this uh lovely
this lovely thing is assuming that we we're we're dealing with good faith here
all right alert from num from input let's go ahead
and save this let's go back let's refresh let's see if we get a value 25
wait a minute why did it alert 25 right away why did why
what why did it alert 25 because we told it to but 25 we're supposed to add 25
the number from the input yeah it's not waiting for anything right
it's not waiting for anything so this this alert right
and this value from the input this happens on page load it's not inside of

00:41
like a click event it's not inside something that would wait so what we're
doing is we're grabbing the value from the input which is nothing and then
we're adding 25 to nothing so that's why we see
25 be alerted right because the the input didn't have a value on page load
our user wasn't fast enough to put something in so we can add 25s to it so
normally we want to put these like inside of like say like a click event or
something like that to where we would only get the value out of the
input after we have clicked yeah alrighty uh so all the reviews and our sundays
are always for vods on uh always as vods on twitch for 60 days no
depends on how we're doing on youtube if i put it on youtube or not
youtube's super finicky i'm trying it out i i really like we're

00:42
getting so many new folks from youtube it's definitely something i want to
figure out i don't really get youtube and our content's really not youtube
friendly um since we do like since since we spend like a lot of time like um
talking at the beginning of each class like think about like a youtube video
you get like right into the meat that's not what we do right and so youtube's
pretty hard to grow on but uh we're getting a lot of folks from
youtube so i'm trying to figure it out i'm trying to figure out like how we can
do better there you see me making like all these like silly thumbnails and
stuff like that just cuz i want to see what works what doesn't work i'm trying
like really clickbaity stuff i'm trying like normal stuff so you're just gonna
see me while out on youtube for a little while while i figure it out but we're
literally getting like hundreds of new folks from uh youtube uh so that's been
really cool to see so as always all of our classes go up on youtube and
if you want to if you really want to like support 100 devs right now like
where we're getting most of our focuses from youtube give the youtube videos a

00:43
thumbs up let them play right let them play keep that that retention up yeah
cool yeah we we could break them up into smaller chunks we could like remove all
the all the fluff but i really do want like for me like it wasn't like youtube
was never like a thing that like i was focusing on i just seen that it's helped
a lot of people like find us and so it's like all right
i still want the full classes on youtube like i'll never kind of like
i'll never like edit out stuff it'll always be the full class the only thing
i edit right now is the like beginning where it's just like starting because i
do want it to be a place for folks to come and if they miss class they're
going through catch-up crew uh so yeah it's trying to find the balance i'm
gonna start mixing in content that's not just class stuff kiku
kiko said the youtube algorithm blessed you hey there we go yeah

00:44
yeah and and youtube the other the other big benefit of youtube is that i i i
haven't monetized the channel uh so there's no ads
so i know a lot of folks that are catching up on twitch
these are three hour plus classes their reviews are really long there's a lot of
ad time so you can always watch on youtube without ads
will you put class on oldie fans i hope so all right so we did our
easy we got the number from the input we added 25 to it we alerted it
in different ghosts hey thank you for the 10 gifted subs thank you for being
here hope you're doing well that's wild thank you so much i appreciate you
hey thank you so much different hope you're doing well
i don't think we're gonna be able to have our

00:45
our mod call today so i'm glad you're glad you're here that i get to get a
chance to see all right last bit here we had this hard bit
um let's look at this hard bit create a variable that holds the h1
so let's go and create a variable that holds the h1
const h1 equals and we're gonna say document.queryselector
h1 right so this is a variable that is holding h1 the cool thing is that we can
have variables that hold our dom elements which is really helpful
especially if you're doing stuff like a lot like you're targeting the same
elements over and over again uh you can you can actually just go ahead and grab
the element and store it in a variable so now whenever i went to h1 i can just
say h1 all right add an event listener to the element
that console logs the sum of the two previous variables

00:46
so i think to me that seems like i want to go ahead and add an event listener to
the thing that we just created so the h1 so i'll do h1 dot add event listener
when i say it's going to be a click and i want to run the function jam
on it beautiful let's go ahead and create our function jam on it
and uh actually let's name it appropriately add two
we'll have we'll call it add two and add two
cool and we're going to console.log the sum of the two previous variables i'm
just going to go ahead and console.log and i believe it was num plus
num from input cool i like that let's go and see if this works as it is
and then we might change it up a little bit all right so there's our

00:47
alert look at our console we had the original five that was
console logged but now we should see another console log when we click on the h1
first try all right looks good right we added 25 and five so that
should give us 30. it worked on click um but i wanted what i want to do now
is i want to i want to get the value of the input as part of the click event
wild how confusing this part used to be thanks leon hey glad you're here mango
glad to hear that yeah cool let's go back let's take a look um what i want to
do is i want everything inside of this event listener now
so i'm going to get the value from the input and i'm going to add 25 to it copy

00:48
boom let's add 25 to it boom let's put that in here
all right it's going to comment out these other lines up here just so that
they don't run still boom boom save it so now our original num up
here should still be five and then down here we should be able to
get the value from the input add 25 to it and then console log it so
we know that the original num the original num is always gonna be five
so let's make let's put 10 into the input that should
be 10 plus 25 should be 35 plus 5 which is 40. so this is working let's refresh
let's put in 10. let's click up num from input is not defined all
right let's take a look let's look at this error
num from input is not defined main.js line 18. let's take a look

00:49
ah what does this mean why why am i getting an error that says num from
input is not defined because it's not defined yet due to that
scope right it is out of scope num from input is now defined but inside
this function but it would only exist inside of that function so up here we
need to we need to comment this out because we no longer are declaring
number from input at this end this like global scope right
so it only exists here that value did not hoist out of this
scope to uh to where the global would have had access to it therefore num from
input was undefined and since that alert was trying to run on page load we're
going to get that error let's go ahead and try again

00:50
refresh all right that error is gone let's put in 10 and click on click me
beautiful 40. second try you cannot hoist let yeah of course
what we were saying though you sure you could again absolutely
how do i get the browser to open this so you can just open the html file
inside of your browser so you can literally drag your
html file to that browser and would open um we have it so that when we right
click we can um when we right click on our html file
we have it so we can open it in the browser but uh if you're brand new
you've never kind of worked this i would definitely work through our first

00:51
javascript class because we go in detail how to do a lot of this stuff you know
but if you want you can just drag that html file to the browser or you can um
have the open in browser plugin like we have so i have this lovely plugin
which is called openin browser by tech er so if you click this little like
these little boxes here on vs code you can search for open in browser and then
that'll just give you the ability to right click on your html files and open
in the browser these will be posted on discord
absolutely so all my solutions always go up on discord so when we're done today
we'll see it all go up on on discord as well
i dragged the file into this window and it closed the stream and that's pretty

00:52
funny are we ready to use prettier yet um i think that you if you wanted to you
could um you'll notice that i i have prettier but i don't use it while
i'm teaching and i don't really recommend it when you
first first start out but i think we're at the point now where if you wanted to
you could start using prettier which will help make your code a little bit
cleaner it helps with all like the little little things
that help your code look better and all the little best practices but it does it
automatically and so when my students are first
starting out i really don't like them to
use plug-ins or things that help them do
stuff until they get comfortable with it and so
if you're just writing javascript feel free to use it now
i wouldn't have it on while we're doing node yet again so you just get used to
it on your own and then turn it back on so yeah you can do it i think it just in
the beginning it could be confusing for my students or they're not really
they're not learning it by themselves and then the problem is that the reason
why this is a problem is because i've had students go into technical

00:53
interviews they're not allowed to use their vs code they have to use something
like coderpad or or heaven forbid like a a um like a google doc they don't have
those tools and they're not used to having to type things out manually and
they get into trouble and so that's why i'd like you to do stuff the
harder way or the more manual way first get comfortable with it and then
introduce things to make your lives easier as we get further along
all right folks like i said all these solutions will
always be on discord afterwards so if you missed a piece you need to look at
something don't worry you can grab it after cool let's keep pushing folks
all right we eventually want to make decisions right
right we actually want to make decisions in our code we want to do stuff if

00:54
something is true we want to do something if something's false we want
to do something else and so to make those decisions
we have to understand about comparison and so
in javascript we can compare stuff we can compare numbers to numbers we can
also do things like strings to strings and so here you're seeing me trying to
compare nine to nine which would be true seven to three which would be false but
string hello does equal string hello and that is true and so to figure out this
comparison we have to understand that there are kind of three different things
that we're looking at when we are using one equal sign that
one equal sign has a very specific name it is a what

00:55
one equal sign in javascript is always a what
yeah it's always an assignment operator whenever you see one equal sign you are
trying to assign something to something else so here i am trying to assign the
letter x to be equal to the value of three or sorry i'm
trying to assign x to be the value of three whenever we have two or three equal
signs we're looking at comparison right we're looking at comparison and so
with two equal signs we're just looking for what with two equal signs we're just
looking for what value exactly and when we have three
equal signs we're looking for value and what
type exactly this uh i didn't see who said it but somebody said this is making

00:56
me realize i have to review this stuff exactly that's why we do it so we do
these review classes we're getting in our spaced repetition we're seeing the
stuff that we've all seen before that's why we're here i love it
cool value and type all right so two equal signs is value three equal
signs is value and type so here we can see all right
does three equal eight in value no right two equal signs is just value
that's false now this one right here is the weird one
where we're saying does number three equal
string three well what's the first thing we have to compare
since there's three equal signs we're going to look at something first and
then something second the first thing we're going to look at is what value
right same we're gonna look at value so does number three equal string three

00:57
in value welcome grog it does number three and and strength are the
same value they're both three right they're both three
however with three cosines we're also looking at type does number three equal
string three and type no one is a number and the other is a string
so this is a false statement number three does not equal string three in both
value and type cool down here three equals does number three
equal number three and value and type yes they're both the value of three they
are both the type of number where can i find this picture in the slides
you can do exclamation point slides if you need the slides
cool then there are some other like trickier ones that we saw we saw the not
equal right whenever we have the bang we're saying not equal so does 3

00:58
not equal 8 that is a true statement 3 does not equal 8 that is true
and then this is the this is the tricky one
right here this is the really tricky one so i'm going to type it out here
does number three not equal string three in both number and
type sorry value and type this number three not equal string three
in both value and type and this is a true statement because the number three
does not equal string 3 in both value and type they
both have the same value but they do not
have the same type so it is not equal in both value and type true statement
all right number three is not equal in both value and type that is a true

00:59
statement so true exactly tricky tricky all right
and then we down here we have our comparisons right is three greater than
eight no is three less than eight yes is three greater than or equal to eight
no is three less than or equal to eight yes
so one of the things i always ask folks to do is to
go back and play through this slide change x to eight uh change it to a
different number play with it make sure each one of these things can work and
remember you can always test inside of your inspector so if you go to console
you can then type in any of these like three equal
equals eight right and it'll give you the the false back so you can definitely
come back to the slide you can throw in different numbers and you can practice

01:00
your true and false statements cool now we we have all this comparison stuff
so we can actually do conditionals right and so conditionals enable us to
make decisions and so if whatever is inside the parentheses is true
we will do what is inside of the curly braces
and so here we can show you the full chain that you can have as well
you can have ifs else ifs and then a singular
else you can have as many else ifs as you would like and the reason why we
have these chains is that we can see all right
if what is inside the if is true we will do what's inside the curly braces and
then we stop but if what is inside these parentheses is
false we will look at the else if if what is inside the parenthesis is
true then we do what's inside the curly braces and we stop

01:01
and we can have as many else's as we like so we could check our if then our
elsif our elsif our elsif our elsif our elsif our elsif or elsif our elsif our
elsif or elsif or our elsif our elsif or elsif or
our elsif our our elsif our elf our our elsif our elsif our elsif our elsif or
elsif or ever all right crispy nugget yeah we got to get the collab going
so we can have our if and then we can have as many elses as we want

01:02
as soon as one thing is true we stop then this is why we're here for eight
hours exactly and then if everything in this chain was false
right if everything in this chain was false well then
the else automagically runs right it just runs it doesn't need to
check anything it just runs cool so let's take a look at this let's take
a look at an example here we have kant's pizza equals dominoes now why
why is pizza here const what does this const thing mean yeah
this is never going to change we're not going to reassign it it can't be

01:03
reassigned can't stop won't stop rockefeller records i came to get down i
came to get down my pizza choice will always be dominoes
it's not going to change so i use const cool all right so
here we have our conditional logic set up we're going to check to see if pizza
equals papa john's no so since it's not papa john's we will move on to the elsa
right since pizza does equal dominoes we wind up
console logging all aboard the train to flavor town and then we're done
right we're done we stop we never make it to the else but what if
what if we were a noob and we spelled domino's wrong what if up
here we had spelled it with an e and we spelled it with an e what would

01:04
be printed to the console in this case yeah
what are you even doing with your life would show up right because uh dominoes
with an e this would be a false statement
dominoes with an e this would be a false statement so the else
would automatically run doesn't need to check anything and we would get what are
you even doing with your life print it to the console nice
and different which is what i ask myself every day ain't that the truth
taco i'm not going to frame it in the way that you did but is code academy a
good a good compliment to this course yeah we actually assign it for homework
uh so part of your homework was to do all the free stuff
i don't ever recommend anything that's paid you don't have to spend any money

01:05
to learn this stuff and the trap that a lot of folks fall into is they feel like
if they pay for something they get more value out of it when it's just not true
what you do get is a dopamine rush that tells you ooh since i paid for something
that means i'm accomplishing things when it's just not true so don't pay for
anything codecademy has some amazing free stuff that you can use we've
actually assigned it for homework but that goes for any other thing but like i
said always go deep not wide i'm going to give you the things i want you to
learn with not because i'm like randomly picking
them out of the air but because i've seen it help thousands of students learn
i've already up like i've been doing this for 10 years
i've already up i've assigned stuff that didn't work stuff that didn't
help in the long run things that were that were bad uh you don't have to
experience that i'm only going to give you bangers and so use the things that i
give you go deep not wide and you'll be well served towards the end

01:06
cool all right what's the danger of assignment versus comparison
also shout out to all my old students that i up with thank you for
paving the way uh for us to have bangers only and i appreciate y'all
y'all real was yeah the danger of assignment versus comparison is one equal sign
versus two or three if inside of one of your conditionals
you accidentally use just one equal sign that will always be assignment and
you'll run into a truthy statement so where this could evaluate to be true
even though you're trying to do comparison so be careful one is
assignment the other is comparison right and if you get those mixed up you can

01:07
run into some issues all right we can also have multiple conditions
that we're checking at one time so if in this case your name is leon
and your status equals ballen well then you would give a lovely
wink at the camera beautiful this is a double condition where both
the left hand side and the right hand side must be true
all right as long as both are true then you get that lovely wink at the camera
for free exactly that wink was for free that like no no come on no charge here
uh and then you could also have an or and so we'll

01:08
see that the and is the double ampersand right and then the or is the
double pipe character right so in this case only one has to be true so if the
day's saturday which is not true or the day is sunday which is true then we get
the weekend can you show us a ternary real quick sure
so ternary is a is a fancy conditional basically and so
we can in here inside the console we can do some sort of statement right
like is uh two greater than one right if it's true then we'll say math is real
and if it's not true we'll say i've been i've been spending too much time

01:09
on youtube there we go cool all right so here's the ternary right we evaluate
what happens before the question mark and it'll either evaluate to true or false
and so if it evaluates the true we do the thing on the left-hand side of the
colon so we got math is real because two is greater than one
but if that had to evaluate it to false then we would have done what was on the
right hand side of the colon now you don't need to worry about
ternaries for right now probably the main place that you'll use
ternaries is when you're solving your code wars
and when you're doing stuff in line but for right now conditionals are fine
don't worry all right so we want to practice our

01:10
conditionals but we are at the top of the hour remember we're here for a long
time right we're here for a long time not just a good time
and so we're gonna go ahead and put five minutes on the clock
we're gonna take our break if you're able please get up move around hydrate
all right let your hands rest give a quick little stretch
and i'll see you all in five alrighty let's go ahead and we're gonna move on
to the next assignment which is the age checker right
right the age checker so let's go ahead and take a look i'm going to go ahead
and close this one we were just working on there is a lovely age checker here
folder and open up that javascript file and there's a bunch of conditionals i
want you to write out so uh if they're under the age of 16 tell
them they cannot drive they're under 18 tell them they can't hate from outside
the club because they can't even tell them they can hate from outside the

01:11
club because they can't even get in if they're under 21 tell them they cannot
drink if they're 25 something they got rental cars affordably so i want
conditionals that check the age right that check the age
and then we'll tell them these different things
based on the age and if you want you can take the code that we just did to
accomplish the harder section i'm going to go ahead and put
five minutes on the clock here go ahead do your best to build out this big
conditional then we'll go over it together you got this
console logs are fine yeah console logs are fine here
shout out to all the the subs today i really appreciate it
a lot of primers spinning all that jeff bezos's bucks
jack tree darth wolf taco meat indifferent shabbos iford lexing game

01:12
remember the human tekken climb pop quiz jason derulo
michael the learner six stack earthy jade shantendo curtis learn project kevin
letterman oh i can't see that one poppy frank silky smooth android wrist
beans quirky the cactus gopher hollow hey callu in the hey i hope
you're still here good to see you thank you for the sub hello david codes21
why levy all dark and coding hey thank you for the 10 months
elbow grease hey thank you get out of here christophe said i was in
a 12k bootcamp and they were using my curriculum
i would be surprised it's all out there for free i know somebody's going to

01:13
start using it hey roy glad to hear that that's why i say it yeah
mandalorian you can't post links in chat um share it with me in the ask leon
channel sheesh we're going to get the apis later

01:14
today you can use apis to build a news tracking website probably
hey no worries dave thank you thanks for being here
all right folks about two minutes left we're gonna go over this together
i'm going to go over local storage today
we can maybe touch on it when we get the apis i don't think i actually have it

01:15
planned in the slides for today but if it's something folks want to go over i'm
open to it we'll get to the end if there's any like
bigger things that we didn't cover that folks take a peek at we can definitely
do that uh grim you're just checking to see how
old they are so have like a variable that holds their age
and if that value is uh less than 16 you're gonna have a
condition that says they can't drive are you gonna hit slido again today yeah
so if you use the slido you can throw your questions in there i think when we
come back from our longer break i'll take a few minutes to go through the top
slido questions kimmy said done and shocked hey i love
it i love doing these reviews for folks that have been with us for a while and

01:16
they come back and they're they're crushing it a little bit i love it
just confirming are there plans to do more cohorts after this one there are no
plans to do another cohort after this one yet because we're just halfway
through this one um yeah so you can always join this one
though you can always join the ketchup crew
yeah we haven't made any decisions for the future yet
all right folks come on back any advice for devs chasing the devops
stream go watch mastermind streams mastermind does like similar to what we
do kind of like uh a free experience free boot camp online but they cover
more devops stuff so they're also a great uh great person great instructor
definitely go watch them [Music] all right folks come on back let's take

01:17
a look at this together all right so what we want to do is we want to go
ahead and build just a conditional here that's going to check their age
let's go ahead and just start with our conditional um
so let's just go ahead and build it out here i'm going to come down here if
and we're going to say age is less than 16. we are going to console console.log
and we're going to grab this thing here they cannot drive boom they cannot drive
all right next we need an elsif so else if oh that was i'll sit else
if there we go we have our elsif and then inside this elsif we are going to
say if age is less than 18 and then we'll do our lovely console log

01:18
and inside this console log we'll say they can't hate from outside the club
because they can't even get in and copy that into here boom all right
uh we're have we're noticing here that this string
we're noticing that this string uh right here
is causing us some trouble what could we do to not run into this trouble
yeah we need to escape it we can go ahead and escape boom boom there we go
awesome someone said we need something that covers 17 this will cover 17 though
because if they're 17 right they won't see this they will see this one here
right they'll see the below so we're covering even the gaps

01:19
because those gaps are still less than that number right
so they had put in 17 this wouldn't be true you'd move on to this one
all right so you don't need the uh the and cool all right
let's go ahead and do another elsif i'm just going to copy this one make it a
little bit easier here i definitely do recommend always typing these out
just to get used to the syntax we're gonna say less than 21
and we're going to say if they're less than 21 they cannot drink
they cannot drink beautiful let's do our next elsif here under 25.
and if they're under 25 they cannot rent cars affordably then if they are under

01:20
30 uh tell them they cannot rent fancy cards fancy cars cannot rent fancy cars
affordably and then if they are i always mess this up if they are over 30
all right so they're if they're over 30 i'll tell them that there's nothing left
to look forward to let's just go and do an else and say console log
uh nothing left to look forward to which we all know is a lie
we all know it's a lie uh once once you once you're over 30 once you hit 35
renting fancier cars with cheaper insurance becomes a thing uh you can you
can run for president right you can run for president in the
u.s and uh you can always learn how to code
right so there we go we got we got we got fancy car rentals learning how to
code and becoming president and you know what they kind of all fit in the same

01:21
thing because you learn how to code you get the money to rent the fancy cars
and then you use the money to bankroll your
presidency so really this is a boot camp on how to become president
cool all right when you make it as president i want to
be secretary of education okay you remember me come back like leon secretary of
education you got this all right so we got all of our conditionals here um
i feel pretty good with it we have our ifs we have our elsis we have our else
we did have this harder which was to to um set up an event listener and so let's
do that real quick let's just do the event listener way um

01:22
do the event listener way here on a click of the h1 so document
dot query selector and we're going to select the h1 then
we're going to say add event listener we're going to do click
we're going to call a function called uh check age
then we're going to have our function that's going to check age
check age beautiful and the very first thing is we're going
to get the value from the input so we're going to say let age equal
we're going to go to the document.query selector and we're going to go to the
input and we're going to grab the value and we're going to make sure that this
value we're going to make sure that this value is a number
we're going to wrap it up just like we did with the last one oh imagine doing
something before and then doing it again huh

01:23
interesting all right so we set up our click event
on the h1 we're going to call the check age function we're going to grab the age
out of the input and then we can just join our conditional from up here boom
give it up super reviews are the best i feel big brain today hey i love that
all right let's save this and see what we have going on
here's the inspect oh we didn't open it let me open it from the html file
[Music] boom open in the browser let's open up the console
no errors let's go ahead and do 27. check
they cannot rent a fancy cars affordably for try
all right i think this is pretty good i think we got got everything we need here

01:24
and take a look at the code again we have the event listener we had from
the exact same um exact same event listener and function setup that we had
from the previous example um we're selecting the h1 when we click
on it we're running a function called check age here's a lovely function for
check age the first thing we do is get the value out of the input and store it
in the variable age and then we have all of our conditional logic that tells us
what gets printed to the console cool questions while we're here remember
i always share all of my code on discord after these reviews so
you don't have to be panicky typing up everything if you missed something or
you didn't get to the push work i'll always share the solution afterwards
the instructions said put it in a paragraph let me see if i i don't read
too well all right put the result of the conditional in the paragraph okay

01:25
so we can do that so let's go ahead and grab the paragraph uh let's look um
it's just a paragraph there's only one so let's go ahead and say uh
const p equals document dot query selector p so now the the um the
dom element is stored in my variable p and so now i can just come down here
and i'm just going to go ahead and change all of these to p equals all right p
dot inner text equals there we go so now what that should do
instead of console logging it should put text inside the paragraph for each one

01:26
of these and um i forgot my parentheses at the end so let's jump to the end here
all right let's do it this way boom boom i don't have gaps here there we go cool
all right let's see if this works zul hey welcome all right let's go ahead
and take a look see if this works and then we'll go over how i did it 27 again
check all right second try all right they cannot rent fancy cars
affordably it's working it's being put in the paragraph into the dom and so
what i did is i put the document.queryselectorp
into a variable called p why did i do that why did i put this into a variable

01:27
called p just to keep our code a little bit more
dry exactly uh so i don't have the constantly typing document the query
selector feed document the query says repeat document query sector p right
and then on max i can just hold down command
and wherever i kick whenever i click i get a cursor
right so i get a lovely cursor wherever i click
and then i can just start typing there so i just hold down command uh on your
machine will be slightly different if you're like windows or new linux
but for me it's just command hold down i click and then i can delete type to
wherever i want yeah alt on windows there you go
cool and so now i set it up to use inner text on all of these there are other
things that we could have done text content there's like all these other
ways to do it but inner text is just easy we did that alrighty

01:28
we're good on this one let's keep it moving folks
yeah the console got removed because it it said to place it in the paragraph i
forgot to read that part so we got rid of our console logs and we
just used the um all right why didn't i put inner text inside of the variable um
i like to be able to see what's happening in my code
and so i can quickly realize that oh i'm putting text inside of whatever the
paragraph is so even if there was a way to put like
enter like if we could put inner text up here like if we wanted to
i still like to have this so i can see what's actually happening in my code a
little bit so i know that i'm putting text inside the paragraph this is still
readable to me yeah i could create like a variable it's like

01:29
p in text but it's still a little this seems just more readable to me yeah
we could do a switch too yeah you could definitely do a switch case here but
this is practicing our conditionals yeah uh what color theme do you use in vs
code i use a theme specifically for folks that are color blind
i am not colorblind but quite a few of the folks that
are part of 100 devs are and so i use a theme specifically for that oh
interlocks with the raid hey hope you're doing well thanks for the raid
how was the stream today what are you all up to
i saw the the sigma grind was uh in full force today how are you all up to

01:30
what are you all up to what are you working on welcome welcome raiders
uh so welcome welcome back uh i was i was kind of hoping that you would still
be live when we were done today because uh sundays are typically days that we
can catch you with a raid uh so i appreciate the raid coming this way
stream is good sigma game dev hey i love it um
so yeah today we are doing a javascript review class so we're going through
every single thing that we've ever touched on javascript all the way from
how to pro like what a program is to variables conditionals loops
functions everything we've already touched javascript-wise all the way up
to like how to actually interview so if you have any interest in javascript and
maybe you've touched some javascript in the past but you want some review that's
what we're up to today taking it slow and enjoying ourselves
asking a lot of questions and so yeah good to see you all
i always appreciate when you swing by uh as i've always said i'm i'm i'm

01:31
always lurking it's definitely my favorite channel to
have on while i'm working i get inspired to like do and write code so let me go
let's go ahead and do a shout out just because i i think most of us
know the the glory of your stream but we have a lot of new folks recently so if
you haven't given them a follow please please give them a follow
definitely one of the best places to to hang out on twitch specifically if
you're kind of just coding right you want to get some get some work done you
don't want to be by yourself definitely hang out in that channel
shut up command didn't work hold on let's see i'm just gonna type it out
there we go all right if you haven't given a follow
please go give them a follow hey cool please go give them a follow if you

01:32
haven't it really is one of the best places to be on on twitch honestly and
you'll always see me lurking in there cool all right uh will we catch a touch
on apis today yeah we're going through everything today so we're learning the
basics again we're reviewing the basics the big four variables functions loops
conditionals then we're going to move on to our arrays and objects once we get
the objects we're touching apis once we get through apis uh we're going to move
into kind of the the the stuff that we talked about last week in terms of
interview prep how to do car how to do prep how to do
everything we need to be ready to go into the hunt
take plenty of breaks you know how we do melody we're taking our breaks to the
top of every hour we're going to take our time where when we hit the three
hour mark we're going to take our 10 minute break so folks can grab some food
do a little bit longer of a stretch all right you ever do leak code

01:33
questions we do um so we we do we do code wars every day
literally if you're part of a hundred dabs you do a code wars every day
and then as we get closer to the hunt and we're actually getting to the point
where we're actually interviewing uh i have a 50-day like plan that i worked
through last cohort where we did a coding challenge every day and we built
up all the principles we would need to carry on to do larger and larger harder
and harder more algorithmically demanding uh practice problems so
we'll do code wars we'll do our 50-day plan to go from kind of like zero to
knowing everything about i don't know hash maps and complexity and all that
fun stuff and then we'll start introducing leak codes as well cool
all right folks welcome welcome raiders glad to hear that you had a good stream
uh if you want to review any javascript hang out with us that's what we're doing
today all right so we just went through our conditional

01:34
review let's jump back into the slides all of our materials are on our discord
exclamation point discord when you join there's a follow along materials channel
you can grab everything we're doing today if you just want the slides you
can do exclamation point slides here in chat and have full access to the slides
that we're moving through our promises coming in this next week's
class yeah we're going to do uh promises
async await all that fun stuff this week and then node so node and async this
week all right we have the third of the big four we've done variables we've done
conditionals now it's time to do functions chat what are functions um
what are functions where to party at [Laughter]

01:35
yeah there's sets of instructions there's sets of instructions
so functions are simple sets of instructions they're meant to be
reusable uh once we get into like big brain territory uh we will go ahead and
have functions that really just perform one action and they really do form the
basic building blocks of our programs so our functions kind of break down into
two key pieces we have the function declaration
and then we have the function call so similar to how we had declaring of our
variables we can declare our functions as well and all that means is that we
have a space in memory and when we declare a function
we create a space in memory for that function where all those instructions exist
and then when we call the function we're
saying use that function that was stored in memory

01:36
now when we call a function we have the ability to pass in arguments
and arguments can be passed into our functions
and they get passed into buckets called parameters you can think of parameters
just as like our variables that only exist inside of this function now
why go through this step why should we have
arguments and parameters and why should we be able to pass in values into a
function like why why is that such like a key part of functions
mike you get it right off the jump exactly
reusability right reusability if we want to be able to reuse our functions over
and over again we want to be able to pass new information into the functions
so that we can use that data with those functions it's all about reusability
exactly cool so here i have a very simple function i

01:37
have a function declaration called yell and i have a function call
and you can see that i am calling the function what what lets you know that
i'm trying to run the function no [Music] i gotta disable that key
and we've done a lot already this is wild
i'm just like just ripping through those i'm like damn we did all that already
all right we still got plenty more to go i got i did all right so here
i have a very simple function i have my function call
and how can i tell that i'm actually trying to run the function what gives it
away yeah exactly the the parentheses the parentheses are how we uh

01:38
or how we know that we're actually calling the function exactly and so
here we have hello which is our argument that we're passing
in whenever you see a function call the way i remember is i'm calling the
function to argue i'm going to call my mom to argue a very healthy relationship
with my mother but we're going to use this as an example we call the function
and we pass in our argument so here i am calling the function yell and i am
passing in my argument of hello so this hello
it's passed into the function wherever i see word it's actually hello
from the other side all right now we could re we could reuse this function
we can call it again we can do yell and we could pass in another word goodbye
and now goodbye would fall into word wherever we see word it's going to alert

01:39
goodbye so we can see this reusability is this reusability of our of our
functions because we can pass in different arguments each time cool
we could also have a function that takes in multiple arguments right takes in
multiple arguments so here you can see i'm taking in the argument of hello the
argument of goodbye hello falls into word goodbye falls into
other word i'm able to alert hello i'm able to alert goodbye cool
let's take a look at some practice here called simple functions let's go ahead
let's open up our code i'm going to close the code that we're just working
on we're looking for the simple functions folder here we go simple functions
some lovely js when i have the html file that way i can just open it up
all right uh we got some stuff here we're gonna create some functions that

01:40
are working with numbers we got some slightly harder ones and we got i mean
we got a hard one so i'm gonna put let's see what
five minutes on the clock let's do a little bit more let's do a little bit
more let's do let's do seven minutes on the clock um
this is the simple functions simple functions simple functions
all right segments on the clock get as far as you can go as fast as you can go
and we're gonna go over it all together remember you don't have to listen to
these sweet sweet jams i always leave the timer up so you know they come back
i like to answer questions while people are going through it

01:41
you can always just meet me and then when you see the timer run out come on back
this is the simple functions folder no way togo no way

01:42
quotient is the result of the vision explain a little bit more about variable
scope within a function uh so functions that are declared in
that function can only exist inside that function that's it
we declare a function inside that function it only exists there doesn't
exist anywhere else unless you spit it out return it somehow um yeah
what would you suggest for someone new to coding uh join a hundred devs i heard
it's a pretty great program i can do exclamation point 100 devs here in chat
uh you it'll show you everything you need to do to sign up
you will go ahead and join our discord and there's a wonderful catch-up crew

01:43
there that'll help you get caught up if you don't like my face
there's also free code cam odin project whatever you do don't pay for anything
you can learn all this stuff for free how long do you assume it takes to have
a solid grasp on typescript after finishing our course material
um not that long to understand the basics maybe like a like a weekend
honestly and then putting in the practice a couple weeks or so
um i don't think it's important for you to get a job
yeah i don't think i don't really teach it if i thought you needed to get a job
i would teach it um but it's just it's a nice to have

01:44
maybe but there's so many other things you could focus on that'll actually help
you get a job that's not one of them we said i knew nothing about coding in
january when i started 100 devs and now i've deployed two websites for paid
freelancing clients hey i'd love to hear that that's awesome
melfi it's our discord so you can do exclamation point discord

01:45
hotline that's dope yeah how'd you find us that way [Music]
what's the new song you play the beginning of every youtube video
uh i actually forget the name of it it is like a like royalty-free music that's
part of stream deck somebody's posted the name of the video on discord i have
the song on discord i forget what it's called though yeah
we got some dunzos coming in would you teach me how to code from the
beginning if i pay for it no uh if you pay me money then i i don't teach you

01:46
but if you if you if you come for free then i teach you that's how it works
around these parts um everything is free it'll always be free none of my content
will ever be behind a paywall education should be free
education should be free uh so all my educational material that has helped
hundreds of people get jobs thousands of people learn how to code is completely
free on youtube we have a discord 30 000 plus strong that could help you learn
how to code um that want to answer your questions that want to see you be
successful and so all that's for free best deal ever

01:47
someone suggested that they should go on cameo that'd be hilarious so [Music]
neko chat says not going to get rich that way i think there are plenty of
ways to get rich that don't exploit folks that need education just saying
there are other ways to make money trying to better their lives i don't
think they need to be exploited for me to make money alrighty folks come on back
come on back all right let's take a look at this
together a lot of little bits here let's take a peek all right so
we are going to move through the easy the medium and then maybe we'll take a
look at the hard as well so this is the simple functions

01:48
let's go ahead and work through it together all right create a function
all right create a function that subtracts two numbers and alerts the difference
function uh sub two and alert all right just trying to make
my my function names a little bit more readable understandable what's actually
happening i know i'm going to take in two numbers so i'm going to call that
num1 and num2 but these are just parameter names they can be anything i
want it could be robot and unicorn that would work exactly the same there's
nothing special about calling this num1 or num2 just a name i could have called
it robot and unicorn it would have worked exactly the same
all right create a function that subtracts your numbers and alerts the
difference i'm going to say let difference equal
num1 minus num2. now could i have done this inside of the alert yes but i like
the readability of then having the alert that has the word difference in it i
could have just like joint this and put it directly in the alert and save the

01:49
line of code but sometimes i like readability readability over kind of terseness
all right there we go we have our sub alert and
it doesn't ask us to actually call it but i'm going to call it just to make
sure it's working so sub uh to an alert let's pass in ten and seven
ten and seven and let's see if this works great we see three
being alerted to the uh browser here so we know that that worked because 10 10
minus three sorry ten minus seven would give us
three so we know that this is working i'm going to go ahead and comment this
out so it doesn't keep running cool yeah alerts the difference yeah so
disadvert not return or anything like that all right create a function divides

01:50
three numbers and console logs the quotient the quotient is the result of
division so let's go ahead and create a function here called uh divide
three and log and we know we're gonna pass in three
numbers i'm gonna do n one and two and three once again we can make them
whatever we wanna make them and then we wanna console.log the
quotient so i'm gonna do it all in one line this time instead of doing it like
the variable and then console logging the variable let's go ahead and do
console.log and then we're going to do our n1 divided by n2 divided by n3
cool so that's going to give us the quotient and we've
console logged it let's go ahead and run this just to see if it works
divide 3 and log let's do something easy let's do like 12 4 [Music]
3 12 4 3. so 12 divided by 4 should give

01:51
us 3 3 divided by 3 should give us 1. so if this works we should see 1 in the
console let's go back take a look let's open up the inspector here
let's open up the console let's refresh and we got one for straight
all right nice i've named my functions quick maps all right cool
so we have our first two functions done and it let's go ahead and comment this
one out so it doesn't run again create a function that multiplies three
numbers and returns the product all right function multi three uh and return
cool and we know we're gonna take in three numbers so i'm gonna pass in robot

01:52
unicorn attack there we go robot unicorn attack
and we're going to multiply three numbers and return the product so let's
go ahead and do um let product equal robot times unicorn times attack
and then we want to return the product cool let's go ahead and call our function
here multi three and so let's go ahead and do um two three five
so two times three would be six six times five should give us 30 and
what would happen if we just ran this as is right now

01:53
what happened if we just ran this as is yeah it would just kind of like poof
into thin air we wouldn't actually ever see anything
we wouldn't actually see anything because what would happen is
two would get passed into robot three would get passed into unicorn
if i would get passed into attack we wind up doing two times three times five
which would make product 30. we would return product and remember the
return goes to wherever the function was called
so it was though this does not exist and we had 30 returned right there but
then poof it would disappear we didn't do anything with that 30. um so one
thing we could do is we could set it equal to a variable and then console log
that variable we could just wrap this in a console log we could wrap in an alert

01:54
let's do the variable way first so let's go and do let let um returned val equal
and then we can go ahead and console.log so we could've done the console log all
on the same thing as well but a little bit more readable here cool so now
we should call the function we know it's going to return the product
so this is going to disappear and it's going to be holding like 30
right when we call it and then we could console.log that 30.
so we know that return gets spit out to wherever the function was called which
is down here so let's go ahead and what we already called it so here's where we
called the function it'll run it'll spit out the product wherever it was then
we'll console august let's go ahead and save this go back to our console log
30 first all right we see here we got 30. so
let's just walk through what happens here again so two gets passed into robot

01:55
three gets passed in the unicorn five gets passed into attack we wind up with
two times three times five which is the same thing as 30.
we're going to return 30 it's returned to where it was called so basically we
imagine this is no longer here and just the value of 30. now returned value
equals 30 and we wind up console logging that return value which is 30 boom
do we just use that to see what the outcome is in the console for debugging
exactly yes just so we can see what's actually happening
a lot of times we might be using this function in conjunction with another
function so that we need to return the values that the other function can use
it but for now we're showing it that like we we can console.log it and get
that value why wouldn't you use parentheses around robot and unicorn uh you mean
here you could um pemdas is in effect you can use

01:56
parentheses whenever you're doing maths but there's no order of operations
things i'm concerned about here so i don't have parentheses around it

01:57
yours has three lines of code i can do it in one flexosaurus let's go
i can wrap this in a console log if we wanted to
but we're not there yet we'll we'll see we'll see
we'll see arrow functioning soon all right let's look at look at this medium
all right create a function that takes in three numbers
let's try a function that takes in three three numbers
add the first two numbers and return the remainder of dividing the sum of the
first two numbers by what come on we've been doing this for three

01:58
hours all right come on give me a second here all right create a function
that takes in three numbers add the first two numbers and return the remainder
of dividing the sum of the first two numbers by the third number all right so
we're gonna add the first divide the third beautiful
i gotta turn my code code wars brain on i feel disrespected here me too
all right uh let's create a function sum and divide
cool we're gonna take in three numbers so i'm gonna call n n1 and 2 and 3 and
we're going to return the remainder so we're going to need
whenever we see return the remainder what are we going to need
return the remainder what are we going to need

01:59
modulus exactly so let's go to return uh n1 plus n2 modulus and three
yep so we're going to add the first two and return the remainder of dividing the
third one do it on one line it's going to do um const sum and divide equals
we're going to do a b c i'm just going to do a plus b modulus b because we have
why why don't i need why don't i need the return keyword here
why don't i need the return keyword yeah implicit return exactly when you

02:00
use an error function there's an implicit return
meaning that anything that's on the right-hand side of this this arrow uh
gets returned implicitly meaning you don't need to put the return on there cool
nice all right let's get to the the hard one shall we
we do the hard one let's see create a function that takes in four numbers
multiply the first two numbers if the product is greater than 100
add the sum of the last two numbers and console log the value
if the product is less than 100 subtract the difference of the last two numbers
and console log the value if the product is a hundred multiply the first three
numbers together and alert the remainder of dividing the fourth number all right
let's try this function around and math out
cool all right here we go so we have our function

02:01
and we're going to take in four numbers so it's going to take in our four
numbers and one and two and three and four cool and we are going to
multiply the first two numbers so let prod short for product equal
um n1 times n2 if the product is great let's just let's
i don't i don't three i don't think cool here
talk about product uh if product is greater than 100 so if product
is greater than 100 sum the last two numbers and console log the val
add the sum of the last two numbers and console log the values so we'll go ahead
and do a console log where we'll do product plus n3 plus n4

02:02
yes we'll take whatever the product was sum the last two numbers we can just add
both the numbers and that'd be the same thing as sum and console log the value
if the product is less than 100 so we'll do an else if product is less than 100
we will subtract the difference of the last two
numbers and console log the value let's go and do console log product
minus n3 minus n4 yeah subtract the difference of the last
two numbers and cons log the value and if it's not greater than 100 or less
than 100 the only thing it can be is a hundred but the product is a hundred
multiply the first three numbers together and alert the remainder of
dividing the fourth number so alert and then inside this alert um

02:03
we're gonna do n one times n 2 times n3 and then we're going to get the
remainder by doing modulus n4 that's all inside the alert cool
next best it's all fun and games until you accidentally let your meme code push
to production let me tell you so it's funny like i i i um
like these are just examples so i'll like curse and stuff but when you're on
the job please don't ever please don't ever like put stupid stuff in your code
because you're going to forget about it you're going to accidentally push it and
whoever's doing like your code review if
you have code review is going to see all your silly stuff i want i want
i once rejected a pr because this was in this was this was

02:04
this was in the bottom it was just a comment that said
this is at the bottom of their code i don't know why this may be so funny
it's like this is like this is like their struggle through it
like i don't i don't get it i don't get it i think i got it ah nevermind
[Laughter] oh oh this is the best i i literally was crying as i read this yeah
all right i think this is close enough i think this is good like i think this
follows everything uh let's try it out um so we can do one that we know be less

02:05
than a hundred um so this this case should be uh two times three is six
uh and so since it's less than 100 we should do six
i mean we should do it the other way let's do it this way let's do
five four three two cool so five times four should be 20
since 20 is less than 100 we'd expect it to subtract 3 which would be 17 minus 2
which would give us 15. so we expect 15 uh to be to be
console log let's save this so let's go around boom we got 15. nice that looks
good our test case passed let's do another one let's go ahead and do 100

02:06
so we should be 100 times 4 should be 400 plus 3 plus 2 should be 405. oh
yep 405 that works and then exactly 100 let's do 101 and then and this should be
zero right because one times a hundred would be one hundred times three would
be 300 and then modulus 2 2 will go into 150
times with 0 left over so we should see an alert of 0. go ahead refresh
first try let's go i'm a problem alrighty folks so we got through the easy

02:07
uh the medium and the hard uh next up we are going to dive into
talking about pseudo code and then we're going to hit up our
loops but since we're at the top of the hour we're going to take our break since
we're three hours we're gonna take a slightly longer break this time so if
you're able get up move around walk around hydrate uh also grab some food
we're gonna be in for a long haul folks we're just getting to loops we still got
after loops we have to get through um arrays objects apis
classes oop and all the hunt goodness so uh we're just getting warmed up here
folks let's put 10 minutes on the clock do what you got to do walk the dogs
get some babies and i'll see you in 10 minutes all right
let's take a look at this one together so i wanted to write some pseudo code
first right so i want to convert a value from celsius to fahrenheit so i want to

02:08
convert a value from celsius to fahrenheit what's the first thing i
actually need what's something that like i actually need
yeah i need that i need that value right i need the value
let's go ahead and get the value first so i i need to get like the value
need the value in celsius beautiful once i have the value in celsius
then what do i need to do thank you necco yeah we need to convert it convert
celsius to fahrenheit and then once we've converted it what's the last
thing we need to do we got our initial celsius value convert
it to celsius to fahrenheit what's the last thing i need to do
like show it right yeah like log it return it show it cry

02:09
uh show the value i'm gonna say show the value
cool those are kind of our three big things we have to do
so we have like a set of instructions what do we use to hold our sets of
instructions like what how what what is the thing
we've learned about so far today yeah functions all right so we have a function
c 2 f and i'm just going to keep my pseudo code inside of here
and so the very first thing i need is to get the value
so i'm going to kind of get the value i'm going to call it like temp
when i set it equal to document. [Music] uh input
and we're gonna get the value out of it we also know we want this to be a number
so make sure that we're always dealing with

02:10
a number and notice the pattern we've seen this two or three times already
tonight and so if you didn't know how to do it you could at least said all right
how do i get how do i get a value how do i get a number and you can look at your
past examples like oh that's how i can get it so you write the pseudo code so
you can go back and look through your other examples you can look through
stack over things like that to find how you're going to do it
all right so now we got the value in celsius how do we convert our
temperature from celsius to fahrenheit what did you all find to convert the
temperature temp equals what temp times 1.8 plus 32. cool i'm gonna trust you on
that one all right so now we've converted it and
the last thing we want to do is show the value um so
we have a place where we want to show it do we do we have like anything set up
here in our html let's see i don't have anything in my html let's

02:11
go ahead and set up some stuff in our html i want like a place to
first we need the input right we need the input and then we need a place to
like actually put the value so i'm going to go ahead and put an input in here
and i'm going to put like uh an h2 that's where we're going to put the value
and we're gonna have an h1 that says click me cool
all right there we go i got our input our click me and our h2
uh so i'm going to show the value so let's just go ahead and grab the
document dot query selector let's put the h2 there and let's put inside of it
whatever temp is equal to at the moment cool
so we're going to get the value out of the input we're going to convert it and

02:12
we're going to put the value inside of the h2 now there's one problem with this
and that's that what's what's the problem we've seen this problem before
let's a i appreciate that it only runs once yeah we haven't
haven't actually called it and uh this is going to happen on page like it would
get this number on page if we were just to call it it would run
we're not actually doing it in response to anything so let's let's go ahead and
just make this like actually a click event make sure it's actually like a click
event so let's go ahead and do um document dot query selector
let's target the h1 we're going to add our event listener notice how we've seen
this earlier today look we're building patterns folk look at us go c to f
awesome so now this will only run on click
well it'll give us some time to grab the
value out of the input to convert it and then put it into

02:13
uh the dom let's go ahead and save this let's see if it runs
i'm going to open this in the browser cool a celsius value let's do a 100 that
would be 212 in fahrenheit first try you know it's tiny let's get bigger
all right so we got a hundred and then let's go ahead and try um
zero should be 32. let's go cool all right so in our html we added
the input the h1 the h2 our main.js we have it set up so that we
have our event listener we have our function where we got the value we
converted it and we showed the value we wrote decent pseudo code so even if
you forgot how to get a value out how to get a value you could have maybe
gone back to our previous code or stack overflow or discord always go to discord
probably first convert c to f right we're going to

02:14
convert the value we had to google that and then we figured out how to show the
value if we forgot how to put something into the dom we could have went to
discard google things like that cool welcome micro glad you got us live alrighty
cool so we got through our pseudocode we got through our temperature converter
let's keep the trainer rolling folks all
right now most important question of the day uh what is the best tv show of all
time all right mods i need you to start timing people out
here i'm seeing some some wild suggestions here
uh we know the answer there's only one good answer here everyone else going to
get timed out it's going to give me a minute here i'm going to start timing
these people out one second here we go there we go

02:15
all right the answer obviously a bachelor cool
since we all agree let's go ahead and take a look at some bachelor
themed coding challenges all right let's take a look
let's close these two solutions if you're just joining us if you want the
materials you can join our discord exclamation point discord agree to the
rules you'll see a follow-up material channel we're going to get all these
materials that we're working through today look at all this gold right here
folks go ahead and get those materials and so let's go ahead and take a look at
bachelor code you see that there are three separate assignments in here we're
going to start with the first one together
i'm gonna open up that js file i'm gonna open up that index.html file i'm going
to open this index.html file in the browser and here we go
and here i'm just thinking everyone really loves the bachelor here that's funny

02:16
all right so here we go we have we have three
uh contestants on juan pablo season of the bachelor we all know that juan pablo
season of the bachelor was obviously one of the most
controversial seasons of the bachelor mainly because juan pablo at the end did
not propose to nikki but instead decided to give her the final rose and say hey
we can kind of keep this thing going but i ain't proposing
shook the whole bachelor nation uh it was definitely up there on best seasons
of the bachelor and so what we want to do is when you click on final rows
i want claire and unfortunately the second level of my life charlene to go away
right and so we have click on final rows claire goes away
unfortunately charlene goes away and we're going to be left with just nikki
who is the one that that that received the final rose okay cool

02:17
so click on final rows claire disappears unfortunately charlene
disappears and um and uh just leave nikki let's take a look at this code
if you look we have some some code that's already here
all you have to do is kind of fill in the blanks here to make it work
all right let's go ahead and put just like a quick quick quick two minutes for
this one two minutes on the clock open up the code give it the old 100 devs try
and after two minutes we're gonna go over it together
uh nikki is in uh the middle the pediatric nurse yes
nick he's a pediatric nurse has the blue top click final rows only nikki's left
all right go ahead two minutes on the clock you got this dig deep we're gonna

02:18
go over it together about how far we felt how about how far we came felt like we
learned this ages ago hey turn up this is the one where like the dunzo can
probably happen quickly that's all right first time i beat the clock hey get in
here shout out to all the new folks that are joining us today
deal see i i love when i could see the first time chatting that's pretty cool i
wish there was like a way to have it for
like the entire first stream like i hope like just for like the first stream you

02:19
get like a special box the whole time that'd be cool [Music]
nikki was supposed to remain dev d nikki so not clear charlie nicki remains
verodin a welcome jumping in mid cohort's totally fine so
we got the ketchup crew frida to join when you agree to the rules and click
the emojis on discord you'll find the new catch-up crew join that get some
help as you start through good day to join us i'll review glad you're here
hey sorry to hear that jasmine onto better ones

02:20
all right folks come on through come on through go over this together all right
so we want when we click on final rows for this function to run so we're gonna
get rid of this insert code here and we know with our event listener that this
should be called hide so when we click on final rows we should call the
function hide and what we want to do is we want to be able to hide both claire
and charlene's photo so if we look at clare and charlene's photo
we can see that claire had the idea of claire
and charlene had the idea of charlene so we can remove claire we can remove
charlene by hiding those two ids yeah cool let's go ahead we can target claire
using octothorpe claire that'll target the id of claire that image and we can

02:21
do the same thing for charlene octothorpe charlene right
and there we go if we were to click on hide it would hide both of them
i can't bear myself to do that so we're going to just comment out this line here
let's go ahead and see if this works all right let's refresh
and we click on finalrows three two one boom claire disappeared uh because we
remove we did the if we go back to look at the code we did the display none
on clear so we actually changed the css that's being bound to the rendering of
claire's photo to none we're going to take a look at it
we're going to take a look at it we refresh let's open up the inspector
and if we look at claire so keep your eye on claire here that's
highlighted and let's click the final rows
and we'll notice that clear now has like this inline style

02:22
has this inline style that's display none that's why claire is not there
javascript has manipulated the dom it's literally gone into this rendering
and put the display none so that claire's photo does not show up right cool
can we use get element by d you can i'm using query selector just because i
can use it everywhere and we're eventually going to use query selector
query selector all um there are things like speed considerations that can come
into play but for now we're just using the thing that's the most flexible
it's awesome here mo glad you're with us today
cool yeah so we're able to manipulate the dom directly with javascript we went
ahead and put style display goes none and this also kind of shows us um why we
don't ever do what this is a really strong uh a strong example of why we
never do one thing in particular there's one thing that we talked about way at

02:23
the beginning um right you talked away at the beginning um about never doing
yeah exactly we would never want to do inline styles right inline styles right
everyone do inline styles and we're seeing right now if we have inline
styles it can kind of override everything and the only way we could
override this would be to have over a thousand points of specificity in
our css which no normal kind of developer would do so yeah we're missing
we're messing with the dom directly we're putting in-line styles and that's
how these things are taking effect beautiful
all right let's go and take a look at the number two
and close this gonna close this now let's go ahead and take a look at
this javascript and this html file if we look there's a lot to be filled in

02:24
on this javascript file and if we open the html file here
we want you to be able to choose who the next bachelorette should have been
clearly the next batch of that should have been charlene
unfortunately they brought andy to be the next bachelorette it was a hot mess
of a season but it did lead to next season which was probably one of the
best bachelor seasons in my opinion it was pretty good i was saying the best
it was definitely pretty good so if we had to have andy as a bachelorette to
get nick as a bachelor down the line i'm okay with that
cool so uh here i want you to be able to pick who you thought the next
bachelorette should have been so if you wanted andy when you click on andy it's
just show their photo when you click again it should disappear you want it
clear when you click on clarity show claire's photo when you click again it
should disappear and you click on charlene it should show their photo if
you click it again it should disappear you get to choose who the next batch
that should have been so make these click events work make sure it's hiding
and showing their image and you're going to have let's see how many minutes

02:25
should we have for this one let's go ahead and do three minutes on this one
three minutes on this one and then we're going to go over it together
all right you got this dig in good 100 try get as far as you can it will go
over it soon my favorite joke from the first cohort
was we manipulate the dom like juan pablo manipulates hearts
that's so good that's so good everyone says that about nick i have to

02:26
watch that season yeah it was a it was pretty decent season
it works for andy but not the other two make sure you didn't reuse andy
throughout all of the functions couldn't you add the ids in the html
file i mean this is practice right this is for us to get and practice and to do
different things as examples none of this is production level code this is
all examples so you can see how different things work in javascript

02:27
hey it's awesome talon congrats everything is production level code if
you have no code review isn't that the truth
honestly lost here well hey this is this
is meant to be a review remember we have full three hour long classes on each of
these topics we're condensing what was i don't know
10 12 classes into one sunday you definitely go back join the ketchup crew
walk through each of these classes at a much slower clip
t3k no no no plans yet for another cohort you can always join our catch-up
crew though exclamation point 100 dabs will give you everything you need to

02:28
know about the boot camp and how to catch up
david yes i would recommend going back to each class and joining the ketchup
crew on discord yep panzer said i would recommend starting at the beginning
and now joining the ketchup crew all right folks come on back let's take

02:29
a look at this together sometimes just a bop [Music]
all right i gotta stop myself like a little little chair dance to keep it going
how many channel points for a pop lock session y'all ain't ready for that the
internet would explode all right let's take a look at this uh
we have something that we we actually saw a little bit earlier today
which is where we put our our dom elements into
variables so here you can see i have the document.query selector andy and i
stored that in the in the variable andy and so now whenever i want to reuse this
document.queryselector i don't have to type it over and over
and over again right just going to save me some time all right
here we have the event listener for when we click on andy next if we look
uh there's three pieces of text andy next clarinet charlene next

02:30
and there's three images and so we want our click events to be tied to
these bits of text so andy next clear next charlene next so let's fill that in
um so when they click on andy next it should fire
the function called andy next like we want this function down here to fire
when they click on clear next i want the function called clear next to fire cool
and when they click on charlene next i want this function charlene next to
the fire all right so let's go ahead and pop that in shar clean next
andy next clarinet charlene x looking good
all of our functions would now fire and so let's look at this first function
here for andy next so i clicked on the bit of text for andy
and what i want to do is i want to add a certain class to clare

02:31
add a certain class to charlene and toggle a certain class on andy
let's take a look at the html real quick
why are none of the images showing up by
default and the other examples they were
there right the other examples they were there but why why are the images not
showing up right now yeah if we look they all have this class of hidden
so let's go and take a look at our css and see if that class does anything aha
all right so there's this class of hidden in our css which is doing the
display none so if i want these images to show
i have to remove this class and if i want to hide them i have to add this
class and that's exactly what we're doing in our javascript here we're
saying hey when i click on andy the only image that

02:32
should be shown is andy so hide claire hide charlene and make andy visible so
i'm gonna add the hidden class to claire i'm gonna add the hidden class
to charlene and i'm going to add the hidden class
or i'm going to toggle the hidden class on andy
so we're just kind of using the same classes so classless ad literally adds a
class and toggles the same thing as a light
switch if the lights are on and you hit the button lights go off
if the lights are off and you hit the button
lights come on right so you're toggling it on and off cool
now you're saying isn't added by default well remember we don't know if we're
switching from claire to andy or from andy declare or anything like that so
what we want to do is it doesn't matter where we're coming from we're just going
to hide claire and charlene no matter what it doesn't i don't care if claire

02:33
was clicked before i don't care if charlene was clicked before as long as i
don't click on andy i'm going to hide everything and then just show or toggle
andy and the reason why we do this is because a computer will do what we tell
it to do the computer doesn't know that we were just showing claire or that we
were just showing charlene it only knows what we tell it to do and so i'm going
to tell it to do the same thing every time which is if i'm clicking on andy
hides claire hi sterling i don't care if they're visible or not just hide them
anyway and then toggle andy yeah cool so let's go ahead and save this and
we should have andy working we have to comment this out because it might not
like these like brook ones let's go ahead and save this refresh
all right there we go we got andy toggling andy andy
andy i saw some folks saying is anyone from atlanta today uh andy was a uh

02:34
associate district attorney for atlanta so this was your associate district
attorney for a while all right here we go so we got andy showing uh claire and
charlene are not working yet right claire and charlene are not working yet
so let's go ahead and fill in the rest here
we know the trick now that all of these are going to need the hidden class so
i'm just going to go ahead and put hidden on all of these at one time just
using that command we talked about earlier with the hidden um boom
there we go now they all have hidden and now i have to go ahead and um add
hidden to andy and charlene since i'm in claire
right and then i can toggle hidden on claire
same thing down here i'm going to add hidden to andy
and i'm going to add hidden to claire and i'm just going to toggle hidden on

02:35
charlene well now it should work for all of them
so andy hide and show claire hide and show darlene hide and show
if we click on andy but then we go to charlene
what do we expect if andy's up and i click on charlie what do i expect to
have happen andy's up i'm going to click on charlene what do we expect to have
happen yeah we're gonna we're gonna we're gonna
tell andy to hide and then toggle charlene that's how we get charlene now
did my program like did my computer know that andy was visible

02:36
like when i when i clicked when i went from andy to charlene did my program
know that andy was visible no it didn't no remember computer only do
what you tell it to do it had no idea that andy was visible it just knows that
when i click charlene i hide andy every time i hear i hide clear every time
did i have to hide claire when i click on charlene
did i have to hide claire when i clicked on charlene
no i mean i did it i didn't have to and so that that's the whole point here
the whole point here is that we are going through and we are we we're not doing
conditional logic we could do conditional logic we could say like if
claire is visible then hide clear or we could just always hide claire always
hide andy whenever we're clicking on charlene so there's ways we could have
done it conditionally and there could be this way we're like oh we're just going

02:37
to take advantage of the fact that i don't care it's going to hide them all
regardless of the state and uh then show charlene cool
all right let's do this last one together so on this last one number three let's
go ahead and open up the index.html and the javascript file
go ahead and open this in the browser and uh what i want to have happen here
is we know that who got the final rose uh this is a very important question who
got the final rose in juan pablo season of the bachelor
nicki exactly nikki got the rose and juan pablo season of the bachelor so
when i click on claire i want it to alert wrong and when i click on nikki
i want it to show their their photo okay so

02:38
if we look we can see that we have two things that we can click on claire
and nikki we can see that both claire and nikki have the class of contestant
but only have uh i'll only have one that has rose
right so claire has the class of contestant
nicki has the class of contestant but only one has the class rose and that's
what we're going to look for if they have the class of rows we know they got
the final rows and we can show their photo otherwise we should alert wrong
if we look at our javascripts here we're going to go ahead and set up an event
listener for every single event listener from every single uh
click clickable thing we're gonna put an event listener on everything that's
clickable aka the claire and nikki then we're gonna check to see if it has that
certain class all right let's put another three minutes on the clock for
this one go at it we'll go over it together we'll explain everything and
then we're gonna move on folks we got some other wonderful things to get to

02:39
all right three minutes on the clock you got this dig in
fls we'll get to that when we go over it together uh class is a dot kangaroo

02:40
[Music] so oh sweet googly mooglies i got it done yeah i love it
done so glad we showed up for this review hey i'm glad you showed up for
the review too hey turd glad you found us too
we got some dunzo's coming in quick we'll go over this one we'll take our
break and then we're moving into a raise folks moving into a raise
uh insert code is where you're supposed to insert code

02:41
it's just my way of saying like hey put your code here
yes exactly pumpkin i mean toasters i need a good tea to drink while coding
any suggestions um i'm a big fan of tazos right now
pretty much all their tea lines are pretty good for me i like something with
a little bit of caffeine good taste i like the
the um vanilla chai it's kind of my go-to we're drinking a little bit of

02:42
coffee today though all right folks come on back come on back [Music]
rubio supposed to be like the best tea for like uh like health-wise yeah
all right let's come on back all right take a look at this last one
we're going to take our break and then move on into our next wonderful topic
today all right so we want to be able to grab all the
contestants and so so far we've seen query selector but query selector only
grabs the first one right right only grabs the first one query selector all
enables us to look at everything that has a specific value so let's go ahead
and grab all of them that have uh the class of contestant
right contestant right so if we look at contestant
we can see that there are two things that have the class of contestant and so

02:43
query selector all is going to return something kind of unique anybody know
what query selector all returns would query selector all give us here
look at us go yeah it returns a node list which is kind of like an array but not
really it doesn't have all the stuff that arrays have
and so that's what we're going to do here we're going to get the query
selector all which is going to give us a
list of every single thing that has that class
but if we want to be able to do like array type stuff on it we can use this
array from and what this is going to do is it's going to give us an array from
this uh lovely node list that we have here
right so we're going to take this node list and kind of get all get an array
from it and now that we have an array from it we

02:44
can use array stuff like for each right all right like for each and so what
we're going to do now is what for each is we're going to loop through each
element that we have and we're going to go ahead and set up an event listener on
each of those elements so we're going to call check for rows let's put in here
check for rows and so all this is is a fancy way
of grabbing everything that had the class of contestant and giving them all
the same event listener we went through and put a smurf on each one of those
contestants that was listening for the click and now no matter if we click
nikki or if we click claire there is now the same event listener on each of them

02:45
all right now now we have our event listener working
right now we have our event listener working
we can go ahead and click on either of the contestants
and so whatever we click on is going to become the click target
right whatever we click on is gonna become the click target so if i clicked on
the first contestant that would be this clear
or if i clicked on the second one it would be this nikki
and so when i click on it i want to see if it contains the class of what
i want to see if we could right i want to see if it contains the what
yeah let's see if it has the class of rose why don't i need a dot here

02:46
but i needed a dot here like here i needed a dot but here i don't
what's the difference yeah we've already said class lists so
we already know that we're looking for a
class so we don't need to put a dot here because we're already expecting a class
up here query selector all can look for anything
and so we need to tell that we're looking for the class of contestant up
here great now we're looking to see hey the thing
we just clicked on does it have the class of rows
because if it does then we know that we've clicked on nikki let's go ahead
and toggle hidden right nikki still has the hidden class
if we come down here and look nicki has the hidden class and so we want to go
ahead and toggle the hidden class on nikki
right and that'll make nikki show when we click on their name because they have
the class of rows and if we click on something that does
not have the class of rows aka if we click on claire then we should see the

02:47
alert of wrong because if we look claire does not have the class of rows so we
should get a wrong do we have this open already let's go ahead and refresh
claire wrong nikki their image first cool alrighty folks looking good
remember i'll always share all the code after class uh so after we're done today
you'll get all of the code that i'm working through all right

02:48
we take a break we're going to do loops and then we're going to do a raise so
we're at the top of the hour so it's going to take our five minute break loop
it real good exactly all right let's go through let's go through loops
this is engagement exactly you're all like engagement got him
uh so we're gonna talk about loops we're gonna talk about loops we're gonna talk
about loops we're gonna talk about loops
we're gonna talk about loops we're gonna talk about loops we're gonna talk about
loops we're gonna talk about loops we're gonna talk about loops we're gonna talk
about loops we're gonna talk about loops
loops we're gonna talk about loops we're gonna talk about loops and talk about
loop hey does this work loops we're going to
talk about loops we're going to talk about loops we're going to talk about
loop our else if our else if our else if our l loops we're going to talk about
loops we're going to talk about loops and talk about loop hey does this work
it was at this moment that he knew he  up loops we're going to talk about loops
we're going to talk about loops and talk about loop
hey does this work hey does this work our else if our else if our elsif our l
loops we're going to talk about loops we're going to talk about loops and talk

02:49
about loop loops we're going to talk about loops we're going to talk about
loops we'll talk about loops we're going to talk about loops we're going to talk
about loops and talk about loop loops we're going to talk about loops we're
going to talk about loops and talk about loop
it was at this moment that he knew he  up luke we're going to talk about
loops we're going to talk about loops we're going to talk about loop
hey does this work luke we're going to talk about loops
we're going to talk about loops and talk about loop
uh come on hey we're four hours in i could have a little fun
i could have i get to have a little fun you gotta give me something
you gotta give me something here 10 hours later it's just loops on loops
on loose all right let's get into it folks

02:50
loops are a way that we can repeat some action over and over again
there are three main kinds of loops that we saw in javascript for while and do
while and each one kind of just determines like how you start and stop
the loop um there are also other loops we saw when
we got the things like arrays for each which we just saw
map reduce all these things are also loops as well so we'll cover loops and
we're going to see them again even when we get to arrays all right so
the first loop we're going to look at is the for loop and you always kind of see
this like pretty overwhelming bit of information initial
expression condition expression increment expression all that really
means is hey we're going to set up a counter
we're going to say how long the loop's going to run like when is it going to
stop and what happens to that counter after each iteration of the loop right

02:51
each iteration of the loop right and so here we have this idea of console
logging i with each loop and if we were to let this run the loop is starting off
at one so the very first thing we see print it to the console would be one
then we're going to add one to the i and then we're going to check to see if
we're still good so one plus one b two is two less than five since that is good
we go ahead and console log i again which now it's at two
then we're going to add one to i which means we're at three
is three less than five that is true then we console log i again which is three
then we add one to i which means we're at four
is four less than five yes that is true so we go ahead and console log i which
is four and we add one to i and there's five less than five
no that is not a true statement so we stop and the only thing that would be

02:52
printed to the console was one two three four beautiful
all right let's take a look at the 21 savage loop you're going to put this for
loop in to practice freckled sides hey coming through with the raid
hey i appreciate you bringing the crew by hope you're doing well ah
i think we've only done we've only been able to make one raid happen to freckled
science uh but an amazing channel amazing group of folks definitely want
to hang out uh over there uh does a bunch of open science does a
bunch of butterfly collecting a lot of really fun stuff a really cool stream to
catch and they stream typically later at night and so typically right after our
stream is over like a half an hour later they start
streaming and so if you're ever like you

02:53
know what i'm staying on twitch boom you
pop over to their channel you have a lot of fun uh definitely
uh one of my favorite channels here on twitch and they
we used to be in the same category but now we stream in different categories so
we don't we don't we don't get to see them as much but if you haven't
definitely give them a follow please let me see i can spam it in chat here
all right i'm gonna grab it real quick one second hold on
boom there we go i'm gonna throw it in chat here boom
boom boom if you haven't given them a follow please please give them a follow
you're messing up if you don't give them a follow
definitely one of my favorite channels to hang out and definitely like after
stream i'm probably still on twitch hanging out in their stream so
definitely give them a follow thank you for bringing the raid over hope you've
been doing well i hope your stream went well hope you all had some fun

02:54
the butterflies are real they are they're beautiful too
wait we're not in science in tech anymore we're not on science and tech
anymore i miss science and tech you know the the so science in tech is where we
started out and now we are on software and game development and back in the day
we used to get clapped by the ducks and so now i don't get to see the ducks
anymore and that that makes me upset but there always used to be ducks that sat
at the at the top of our um at the top of our uh
at the top of our channel and so we don't see the ducks anymore but we got
our own like science we got our own channel but i miss being with all the
other folks in uh science and uh technology
so there's there's a relic of some of the old guard of which freckled science
is one of them yeah there's a stream of like these
ducks and they always used to like they were just always live they would

02:55
always have like 400 500 people just like watching ducks walk around
i don't know different different strokes for different folks i guess
all right let's let's look at this alrighty folks let's get in here let's
take a look at this code for folks that came up with the raid we're in the
middle of a full javascript review so we run a free 30-week software engineering
bootcamp everything you need to go from having never coded before to actually
getting employed as a software engineer and so we are taking today to just
review everything javascript that we've talked about so far we're four hours in
who knows how much longer we're going to go we just talked about loops we got to
talk about arrays objects object-oriented programming apis
and then how to interview so we got a lot of stuff still left on the docket so

02:56
glad you're here with us all right so let's go ahead and take a look at this
savage loop uh it's in the materials for today if
you wanted to follow along with the materials they're honored discord
exclamation point discord agree to the rules you'll see a follow-on materials
channel and you'll get all of this heat right here that we're working through
today all right let's look for our 20 sir savage the 21st
we have a javascript file and there's a little prompt here
i want you to go ahead and create a function
that has a loop that prints 21 21 times to the console and then call that
function uh bonus if you can make it print 21 21 times to the dom
cool so let's go ahead and bring that up here and bring the timer up let's do uh
let's do four minutes on this one four minutes on this timer go ahead
use a for loop if you can do the bonus do the bonus and

02:57
we're gonna go over it together you got this give it the whole 100 try as far as
you can can i print thailand of course can't wait till that duck pokemon comes
out yeah i don't know starters for violet
don't look too impressive to me i i mean they look cute but
are you kidding i love me the weed cat i guess i think the starters look okay

02:58
but uh they're not gonna give us the national decks again
that's gonna be upsetting i just don't believe in them anymore
we should have more info dropping soon they always like they they used to
through out all the main series up until sword and shield they always drop new
info like mid-may like like tomorrow if they kept the old the old schedule
like tomorrow they'll drop more info about um
the two new games violet and scarlet um but with sword shield they waited
until june so i'm hoping they do in may and maybe this week we'll get some good
info if not we'll have more in in june i just want them to get online right
they could just get online right i'd be over the moon

02:59
give me like good online where i can like actually battle folks add them to
my friends list and a national dex and like i'm good sorry full decks
can't believe i'm actually done hey congrats minute 30 left to get in here
favorite vs code plugin i don't really like i don't really use plugins

03:00
that's all my plugins probably prettier by about it all natural [Music]
a lot of dundas coming in now pokemon x and y had the best online
you could literally just be playing and you see all these people from like japan
and france playing if anybody looked cool you like click on their avatar you
could ask to like trade with them you could ask to battle with them and then
the cool thing is if you had like a really good battle and like they did
something cool you could you could work them all the way up to your friends list
and actually talk to them while you're battling so i made friends from japan i
made friends from france like people all over the world that i was like battling
and playing with it just turned what was a normal single player experience into
what felt like a real like world with like real people in it that
you could really battle and that like just blew my mind and i've been chasing

03:01
that ever since and it's just gotten worse and worse hey
really needed this review i know i had no idea hey i'm glad it's working for you
all right folks come on back come on back all right let's look at this together
show the music all right a function that has a loop that prints
21 21 times to the console and then call that function all right function sir
savage the 21st and it's going to have a loop that prints 21
21 times to the console let's go and create our for loop let i equal
one while i is less than uh or equal to 21 and we'll do i plus plus

03:02
and we're going to console.log i oh sorry i'm going to console.log 21.
beautiful so we're going to console.log it 21 times to the console let's go
ahead and call this let's save it and let's make sure that this actually works
open in the browser let's open up the inspector
console boom we got 21 21 times to the console 21 21 21
i thought you're gonna let copilot generate it nah
all right cool we got 21 21 times to the
console but there was a bonus here bonus if you can make a print 21 21 times to
the dom to the dom all right so let's let's come down our console log here
and we have anything in the dom where we can put it
yeah we have this id savage says so let's go ahead and target that um document

03:03
dot query selector and we'll go ahead and do the id of savage says
and we're gonna put inside of that uh 21. great so now we should put 21
into the dom 21 times we're going to see
something that's going to happen here so let's pay attention so we're going to
loop through this should run 21 times we should put
21 into the down 21 times let's save this let's go back let's refresh
all right so we did get 21 in the dom it does say 21 here
um but why doesn't it say 21 21 times what happened what's going on yeah

03:04
for nook college robotics uh just overrode it we just overwrote it 21
times right we just put it 21 times back into the dom so it worked did it 21
times but it we didn't get to see it what we want to do is we want to concat
need it right so let's go ahead and do plus equals
21 and i'm gonna put a little space that they're separated and now what's gonna
happen is each time this runs we're going to add 21 to the dom so it's going
to keep concatenating in the dom and if we refresh
boom there we go we got 21 21 times to the dom
wrap it with the space in the front boom there we go we got 21 21 times into the
dom we got some space between it and looks like we're doing good control
all right take a look at the code real quick
simple for loop we did the console way first now we're concatenating in the dom

03:05
the second way cool all right let's keep moving folks
alrighty we also have a while loop and so while loops are a little bit
different we do the can we do our increment outside of the
loop so here we're setting up count as our increment we have our end condition
as part of the loop and then we are incrementing our count here uh each time now
if i for for some reason forgot to uh have my count go up by one
all right go up by one uh what might we run into here with this project
what might we run into here yeah we could run into an infinite loop meaning
that our loop would keep running and uh until our browser ran out of

03:06
memory and our computer crashed chrome kind of stops that from happening these
days but back in the day you could have infinite loops that would literally
crash your browser and crash your computer um and so yeah we gotta be
careful when we're doing especially while loops that we make sure that our
end condition can actually be met right and that we actually have an increment
that's happening so we don't run into an infinite loop
i'll just finish a cpus project do you only do js yes we are here to learn how
to get jobs and so the fastest way to a job right now is full stack javascript
that's how we teach it cool all right let's go ahead and take a look at
another loop the uh the oh sorry let's let's take a look at some review here
and move into the bring it on so go to bring it on code here
and close this sir savage 21st code and we should have a bring it on
here we go bring it on is the name of the folder we got index.html we got a
javascript file here and we got review of all of the big four that we just

03:07
covered there's some variable review there's some function review there's
some conditional review and there's some loop review let's put eight minutes on
the clock eight minutes on the clock give it the old 100 devs try
try and get as far into this as you can and we're gonna go over it all together
all right you ready let's do this got this this is the bring it on it's
review everything we did so far eight minutes on the clock
daddy's home hey thank you for the hydration cheers to you

03:08
this is the bring it on yeah seven minutes to go folks you got this
how can we make our commented lines wrapped the next night instead of the

03:09
whole comment online it's called word wrap it is a setting in vs code word
wrap so if you open up your settings and you look for word wrap you can turn it
on or soft wrap option z on mac alt z on windows there you go

03:10
120 days of anki and code war streak that's wild congratulations web dev
between word wrap and white space word wrapping is like what you see here
where um like see how we get to the end of the line
instead of me having to continue to scroll to the right it wraps to the new
line that's word wrapping white space is just what you see here
like literally the spacing i don't know if you're memeing or not
chronic but uh we're not using any frameworks right now
cover basics of javascript then we move into the basics of node we use express
to build out our apis and then uh yeah we build up full stack

03:11
web applications we got a little bit of react on at the end
what do i mean by subtracts for numbers yeah create a function that takes it for
numbers and subtracts them all from each other and then alert the difference so
yeah subtract them from each other anthony from kidder hey thank you for
the raid hope you're doing well thanks for the raid what are you all up to
anthony from kidder i don't think i've seen your stream
before what were you all working on or doing or having fun
we are right now doing a full javascript review

03:12
uh so we run a free 30-week software engineering bootcamp takes you
everywhere from having never touched code before to everything you need to be
employed and uh we're getting ready to move into back end so if we're moving to
back and we're doing a full javascript review we're four and a half hours into
it we're still not even close to being done and right now we're doing a review
because we just reviewed the big four we did variables functions loops
conditionals that's what they're working on right now so we got three minutes
left on the timer and then we're gonna move on to array
doing a solid js and react comparison it's been fun let's do
what did you uh what did you find when you were working with solid.js in

03:13
react what was the what was the results of the comparison
that's awesome and different i know that that's cool yeah
two minutes left folks and we're going to go over it together as far as you can
and then we're going to go over it together
that's awesome hey thank you anthony i appreciate that
about to set up a raid then we get folks coming back your way if you're helping
out on discord we gotta get folks right in your way that'd be dope

03:14
got some dunzo's coming in love to see it love to see it
more performant dope that's awesome i haven't touched it before i haven't
played with it if we keep going with me another
extended break yeah we'll probably do like
i do like another five and then a ten i think we'll do five ten five ten five
ten for the rest of the night can you make a guess of how much longer
we're going to go until i have no idea it depends on how many questions you
have remember i also said like once we get through
um this i want to take some time to answer some of the the
slido questions and then we're going to move into erase objects oop

03:15
then prep and all the interview stuff so yeah we still got some time ahead of us
last one went nine hours i don't think we'll hit nine
maybe maybe like seven seven and a half it's really hard to
to guess these ones it really does come down how much questions you all are
asking but kudos to you all for putting in five
hours on a sunday so far that's wild go 305 hey thank you for the gift of
subs thank you for being here i appreciate that thank you so much
seven and a half leon time is nine i like that that's funny
all right let's go over this together folks over it together then we're gonna do
some slido questions and we're gonna probably take a break and then move into
arrays all right variables create a variable

03:16
and console log of the value cool all right let uh num equal five
and let's go ahead and console.log beautiful
create a variable add 10 to it and alert the value all right let other num equal
15 add 10 to it so other num plus equals 10 and alert other num beautiful
all right i think that gets our variables we got a
console log happening we've got an alert happening i'm just going to comment
these out so if we run our functions we don't see this stuff but it looks good

03:17
to me functions create a function that subtracts four numbers and alerts the
difference let's create a function sub four and alert cool
you know we're gonna have four numbers when we do n one and two and three and
four and like we talked about earlier nothing special about those parameter
names we could have called that robot unicorn attack
zebra and it would have all been the exact same thing um but we're gonna go
ahead and alert the difference so let's just go ahead and pull our alerts
straight in here and do n1 minus n2 minus n3 minus n4 beautiful so we would
subtract all the numbers that would give us the difference and we're already in
our alert cool i'm not going to bother calling
these ones because we might have already did a lot of these similar ones today
create a function divides one number by another and returns the remainder as
soon as you see returns the remainder what are we looking for
returns the remainder what are we looking for

03:18
modulus exactly so it's going to create that function return remainder
and let's go ahead and return and we know we're going to take in two
numbers let's do robot unicorn and we can just return robot modulus unicorn cool
we had a function divides one number by the other returns the remainder we have
the modulus to give us that remainder robot modulus unicorn would work here
all right look at these conditionals create a function that adds two numbers
and the sum is greater than 50 alert jumanji all right function uh add to
and alert cool we're taking two numbers let's do num1 num2 or in this case rhino

03:19
zebra and then let's go ahead and create a sum but sum equal rhino plus zebra
and if let's say if some is greater than 50 we should alert comanji beautiful
all right alert two we took in rhino and zebra we added rhinos everybody get the
sum if sum is greater than 50 alert jumanji that's what we did let's go
all right create a function that multiplies three
numbers and if the product is visible by three
alert zebra create a function that multiplies three numbers and if the
product is divisible by three alert zebra all right function multi three

03:20
and check cool so we're gonna take in three numbers and one and two and three
we're going to [Music] get a product so let product equal and one times and two
times and three and if that product is divisible by
three how can i check to see if the product is divisible by three
yeah we can do that modulus right so if we divide if we use the modulus divide a
number by three and we don't get a remainder if we get if we get zero back
we know that that number is divisible by three right so we can do product
mod three and if that equals zero then we know
that whatever product was was indeed divisible by three because if it wasn't

03:21
divisible by three we would have gotten some other number besides zero like one
two doesn't matter cool all right so if there's no remainder oh
sorry there if the remainder is zero then we know it was divisible by three
and so we can go ahead and alert zebra zerg zergrush
zebra there we go all right alert zebra beautiful
all right let's keep pushing here we got one more here loops dilute the loops
create a function that takes in a word and a number
all right here fingers takes in a word and a number console out the word x
times where x was the number passed in all right let's create a function here

03:22
loop word x times we're going to take in a word and a number
and we're going to console.log the word x times
where x was the number passed in let's go and do four let i equal one
while i is less than or equal to num we're gonna go ahead and have i go up by
one each time and then we are going to console.log word
so if this works right we'll console.log word once for each time
and so we'll start off at one we'll go up until we hit the num that was passed
in and so if we passed in five we should see that the word console log five
times beautiful all right well done everybody well done let's go ahead and um
why start at one instead of zero well i'm not using eyes like an index or

03:23
anything like that and so since i know i'm not using it as like an
index or anything i can just start with one
instead of zero if i knew i was going to be using this like with a raise and i
needed that i to be like an index value since our indexes start at zero that
would start at zero we could do it if you wanted to we could start off at zero
and just um right while it's less than num and that
would be the same thing it'd work just the same cool
we ain't nowhere near done yet we still got a lot of stuff to go
through all right let's save this one up let's go ahead and get back to the
slides here we're going to move into arrays before
we move through a raise i want to take it some time to go through some slide up
questions here maybe like let's say like five minutes or so no 10 minutes or so
slide out questions and then we're going to take our break
because when we take a break we're going

03:24
to come back from arrays we'll do arrays we'll do objects and then we'll do apis
and then we'll do oop and then we will wrap up with like how to do the hunt cool
uh first question should we remove our current non-related dev job since covet
on our linkedin profile or replace it with dev freelancing no you don't have
to do that as long as you have your agency experience or your freelance
experience on your resume as well like you want that on there
my link is private because my former boss stalks people online and tries to
sabotage them should i risk it for the biscuit and make it public anyway
never do anything that's going to bring yourself harm or something that could
adversely affect your process remember all the stuff i ask you to do is about
opening as many doors as possible not everyone has the privilege of opening
certain doors and so if you if opening one of those doors would put you in a

03:25
bad spot don't do it what do you say to someone who has
fallen off the wagon and has fallen behind difficult life stuff happened but
i know i'm not the only one so i feel uh i feel guilty um there's there's no
such thing as falling off the wagon or falling behind uh because we have the
ketchup crew you can definitely do this whole program at your own pace we don't
all have the same privilege of time or energy or um
this might not be the right time for you to go through program but the beautiful
thing is that we have so many other folks that are in the exact same spot
that are going through the ketchup crew at their own pace and so while there
definitely are always perks to being live you can get the bulk of the experience
by going through the ketchup crew with yourself and so give yourself some time
give yourself a little bit of grace and then get back to it right get back into
the ketchup crew keep plugging away but yeah if you need
to take time you need to to recharge and come back that's okay
that's the beauty of this being also a free program right like
if you're doing a paid program you either either do it or you don't and you

03:26
lose your money uh here since this is completely free you can take you have
the luxury of some of that time if you need to take it
but we're all in the same roller coaster
some of us are just a little bit further back that's all right
um something about a dev finder i haven't used it i don't know what that is
uh can our networking from now will be based solely on our hit list uh we're
close to doing that we're close to doing that um we are
almost at the point where we're ready to like start the hunt seriously
um so you're you're you're i wouldn't put the pressure on yourself to be doing
hit list networking yet uh just because we're not there we haven't started to
back in yet you haven't started 100 hours project yet um so the the hit list

03:27
focused networking comes a little bit further in the process when if you start
to convert these these folks into actual leads like
folks actually giving you interviews you're ready for those interviews we're
not 100 ready yet to start actually interviewing so it would be a waste if
you networked your way into those roles and they weren't ready to kind of go
with that process so we can't wait just a little bit longer for hit list focused
networking leon how do you make time to do 100 devs
work and live your life thank you for what you do
uh i don't go into my days like an accident
my entire week is scheduled my entire month is scheduled if it's not on my
google calendar it does not happen i also have a wonderful wife that is
also doing their phd and working extremely hard and so um
it's really great when you have a partner that's grinding as much as you

03:28
are and uh yeah so it works out well but i always schedule time for personal
stuff i make sure that i have a few a few afternoons uh a week that are that are
fun time date night with with the wife like oh like you you got to schedule
rest and relaxation just as much as you schedule your your working hours
and then i really do work a lot so but i also
one of the weird people that like to work um yeah like a good saturday is like
relaxing and then at night like getting some work done i don't know i'm weird
uh mongodb versus sql sec sql being highly regarded by other developers you
ever elaborate on the use of these and why we might need one versus the other
uh we're not there yet we're going to learn mongodb first and then we're going
to learn a little bit of postgres as well so we'll learn both
and the reason why i like mongodb is because if you know objects you know how

03:29
to use mongodb that's it that's why i teach it it's just super easy to go from
having understood objects in the javascript and like basic apis to using
a database now there are certain scenarios where mongodb is better than
sql and some scenarios where sql is better than mongodb when we get to that
in class we'll have actually a whole video that breaks down um the
differences what's better for what but there are scenarios where mongodb could
be better there's definitely a lot more scenarios where sql can be better but
we're going to learn a little bit of both so that whenever you join the job
whatever they're using you can pick up pretty quickly i've
had bad i have bad social skills and struggle networking into a job you have
any tips for good conversation and being likable beyond the class book uh it's
how to win friends and influence people if you've not read that book you must
read it you must put it into practice and the other thing is that social
skills are a skill that you can practice so when we do our networking nights you

03:30
have to show up you have to jump around from table to table and just be up front
hey i really need to work on this stuff will somebody work on it with me post on
discord that you want to practice this stuff and people will join you as well
we literally have people that practice networking and practice like the like
the behavioral interviews every single day on discord last cohort
there are a group of people that did like cold wars every day and coding
challenges every day there's also a group that like practice social skills
and interviewing skills every day you have to read how to win friends and
influence people you have to have the questions and the answers memorized on
the bank like that that's your baseline and then everything else is practiced
from there on can we please see real life examples of
when to use which loop syntax um no i mean they're just different
tools you use them when you need them if you if you you will find yourself in
a situation where you need one versus the other

03:31
you'll probably use for loops most of the time and that's okay there's every
scenario where that's not working you're not doing what you need then you'll use
something else but they're just tools on your tool belt you don't need to you
don't like you'll know when to use it because one won't be able to do what you
needed to do so yeah don't don't don't stress about like knowing when to use
them in the right scenario these are all different tools on your
tool belt and sometimes you're gonna see
a nail be like oh i need to use a hammer and sometimes you're gonna see a screw
and know you're going to need a screwdriver right and so it's about
finding scenarios where you need them don't stress out about having to know
all the different possibilities just know that they exist and if you need
them use them all right let's see here thanks drawer
uh can we please go over how to set up local storage i think once we get

03:32
through apis we can look at it um but it's really just the three commands that
we did in the slides there's really nothing else to it so if you watch the
local storage class just review those slides and that that that class it's
really just the fork like the four commands like add it remove it
set like that's it there's nothing more to local storage than that um yeah
100 devs minecraft server we used to have a minecraft server uh we ran it for
a while um the problem was that like minecraft is not free
and so i don't like having like things that are not free
and so i sunset at the minecraft server because there was no free version of
minecraft that's why we've been working on the cs go server because uh no matter
who you are like no matter like if you have like a toaster for a computer um

03:33
it'll work and it's free so yeah we have the cs go server coming
let's do a few more of these uh these fido questions then we'll take our break
and we come back we're moving into a raise folks
uh the engineers in my area mostly don't have twitter but i found a lot on
linkedin would be a bad idea to connect with them there instead um you can reach
out to them on linkedin you'd have to send like a really nice message
explaining why you're reaching out to them it's definitely a lot easier and a
little bit more organic to reach out with them on twitter so i would keep
trying for folks local to your twitter or local to the biggest city near your
locality and if there's nobody like if you live in a really small town that's
really far away from the big city you should probably be looking for remote
positions anyway and so you should go the remote route instead of the local

03:34
route uh are there any live networking and
live team project nights for the ketchup crew uh yeah i mean so even if you're
part of the ketchup crew you're still welcome to join our project nights uh we
have them mostly during class time because that's when the bulk of people
are available but we'll do some over the weekend and stuff like that but you can
always create a thread in the ketchup crew and ask if people are where you're
at and if they want to work on those projects together so we'll have some off
hours project nights that other folks can can join
but also don't be afraid to kind of just put out into the ketchup crew channel
that you want to do that stuff together factor hey thank you for the gift of

03:35
subs thank you for being here all right let's see uh
i'm i'm in the ketchup crew starting to work on my portfolio what do you
recommend to put in there if my html css were created as baddies um you need to
clean it up like it's okay to be like a baddie on
the weekends you know but sometimes we gotta not be so sloppy and clean
things up and so uh i would say you wanna definitely take the the salon website
and what was the other big one that we did
salon and the restaurant website clean those up and those should be the first
two things on your portfolio until we get to the more meteor
projects specifically on the back end uh are we targeting mid-level roles
instead of entry i thought i remember at the beginning of the cohort that

03:36
mid-level has less applicants um i think anything below senior is fair game
but we did even have folks last year that were brand new to coding they got
senior roles it's all a game to be played if you play
it well you're gonna realize you have more opportunity than folks to have no
idea how to play this game at all so um i i don't think limiting yourself is
a good place to start we're gonna we're gonna we're gonna be serious about the
rules we think we can apply to anything below senior i think is fair game and
remember we're networking our way in so a lot of times even if the position is
not a right fit if you network your way in then they might have other roles that
are better fits for you the whole point is we're talking to real living
breathing human beings that actually like us because we did the process right
so they're gonna be more accommodating than just clicking apply
uh once we get a job as a master's in cs worth it if your company's paying for

03:37
education sure if the company ever says we'll pay for
your bachelor's will pay for your master's hell yeah take it who cares
it's free right but if if they're if they're not paying
for it then then probably not there are some like pretty cool things
that are happening now in that space though like georgia tech has the fully
online masters which is pretty affordable you build decent projects um
and it's the same degree as they're like on campus and i believe that's a top
five cs school so there are some like alternatives that are cropping up but my
advice in education is always if somebody's paying for it hell yeah
otherwise the debt is probably not worth it um
how can i craft my story if my story is legitimately all over the place i

03:38
haven't lived a very linear life just pick the threads that you care to
hold on to so if you haven't had a very linear life that's okay you can omit
things you don't have to you don't have to say everything that happened in your
story you can jump you can have gaps as long as the transition from one to the
other sounds natural nobody's really going to ever dig to figure out like why
and so a lot of people stress about having gaps but my students that craft
their story right don't have to worry about that and so it's okay to omit
things and just have a naturally flowing story with the things that you want to
share that's okay you can make that work too
regarding resumes we have a degree in a related field okay data science do we
have it on the side or actually have a section discussing it in detail uh i
think education like if you're following the um the template where we have
education is a good place to keep it on the template

03:39
yeah matter what you have it should just go there
this next question is definitely trolling instead of using anki i've been
writing old-fashioned note cards does this still count as us doing anki hell no
it was at this moment that he knew he  up old note cards or taking notes
in general is the biggest waste of time you could ever ever ever do
the reason why anki works is because there's an algorithm behind it that
shows you the cards when you need to see them if you're just taking if you're
just writing flash cards you're not actually
using spaced repetition it's just really
hard to as a human know when you need to see certain stuff
and uh taking notes just doesn't work either uh it's it's something that we
use that feels like we're learning it feels good we feel like we're being
active we feel like we're being participatory but it's actually really

03:40
low cognitive effort and we're not actually contributing to our learning cool
can you speak about what we say to 100 devs and interviews 100 devs is an
agency that has a training program that's it you can say when you're
talking in interviews you don't really bring up 100 devs you say it my last
opportunity and my last experience if they dig then you say oh 100 devs is an
agency that has a training program if they dig you say oh yeah i went through
the training program and they say oh what did you do there well he's i worked
with a lot of clients and they say oh what kind of clients when you talk about
the client that you worked with so you remember everyone here has to get a paid
client or a volunteer client or contribute to free
software and so if they dig dig dig dig you say oh well this is the client i
worked with it's the project i built or this is the person i volunteered with
here's what i built or here's the free software project you can see here in my
commits here's what i built that's it but a lot of folks won't bring it up
they'll just say my last opportunity my last experience and most recruiters
don't care they're just trying to check some boxes and get you to the nerds

03:41
but we'll practice that a lot as we kind of continue all right
i think we got through a big chunk of this slido so pretty good the ones we
went through let's go ahead and take our five minute break and when we're done
our five-minute break we'll come back we're gonna move into arrays and objects
and then apis we've got a lot of fun stuff left folks so
let's go ahead and put five minutes on the clock here all right let's talk
about arrays folks let's talk about raise
all right what are arrays chat what are arrays toasters exactly
they are toasters magical bill gates toasters and so i like to think about

03:42
toasters when i think of a raise like i thought i was doing good in life until
i found out about bill gates toaster right so my toaster is pretty pretty
cool it's a it's a four slot toaster right
upgraded recently four slot toaster you can do bagels you can do bread that
turns it into toast uh all the bells and whistles normal toaster so one element
that holds four things so one thing that
holds four different things i can really put whatever the heck i want inside of
that toaster however one day i was hanging out at bill gates house and i
decided to like you know i was in their kitchen and i was like what do they have
in the freezer they had like the fancy toaster shooters not like the toaster
strudels that norm like normal folks can buy like the toaster strudels that like
get flown in from like the netherlands and like are like really fancy and so i
was like i gotta have myself some of these fancy toaster strudel i wasn't
gonna do one or two i was like i'm gonna fill up all four of the slots and so
i put the four toaster strudels in and then i

03:43
like right in front of my eyes boop like a new slot opened up so i was like wait
a minute there's four slots with the four fancy toaster strudels and as i
filled it up the fifth slot magically appeared i'm like wait a minute i went
back to the freezer i got another toaster strudel i put it
in the slot and then boop another slot appeared
and then i realized that bill gates toaster magically creates a new slot
every single time we fill it up and so it's still one toaster
but it's holding all these different elements and the cool thing is it could
be not just toaster strudels but bagels and toast and pizza rolls and hot
pockets like they'll get social took everything so
one element that held a bunch of other things but still one entity and so
that's what i think about when i think about a raise not my
normal toaster but bill gates toaster melody dev hey thank you for the five to

03:44
get this subs hope you're doing well thank you for being here
so how many toaster strudels did you end up with i got to around eight or nine
and then they didn't have any more in their freezer and uh i was thoroughly
convinced in magic at that point forward so yeah i stopped around nine all right
so arrays are really a data structure used to hold other things
and those other things that we're holding are in an ordered collection
now something really interesting about an array is that that ordered collection
we start counting at zero we call that zero indexing meaning that
the first slot in the toaster is not number one it is the zeroth slot on that
toaster we do zero one two three and so on now the cool thing is once you get a
raise you also get all these other methods that work with the arrays for
each map reduce all these wonderful things that you're putting into practice

03:45
as you're doing your code wars every day and there are multiple ways to create
arrays we can use both constructors literal notation and we'll see both so
here's the constructor way of creating an array but for when we're kind of
working through stuff today we'll probably just use literal notation
meaning that we are literally creating an array using square brackets cool
now when we declare an array we can declare it just like as an empty array
like we see here we can also declare it with stuff inside
so here you can see i'm i'm assigning it the value of zebra boolean of true
number 21. so any of the other data structures that we've learned about so
far can go inside of arrays including other arrays including objects anything
we could think about can go into our arrays nice
now the interesting thing about arrays is that we have to talk about elements
and indexes right elements and indexes so here we can see

03:46
four elements new york city la sydney and london however if we're talking about
the first element we're talking about new york but if we're talking about the
zeroth index we're also talking about new york we've got to be careful the
difference between the word element and the word index so new york is at the
zeroth index even though it is the first element in our array cool now if we
look at this lovely toaster here what is the element at the second index
thanks evergreen yeah sydney cindy is the element at the second index

03:47
uh what element is at the first index nice la and what element is at the
fourth index what elm is at the fourth index
undefined exactly there is no fourth index we have zero
one two three but four would give us undefined because it doesn't exist yet
nice undefined all right now not only can we use the index to
add stuff to the array we can also use the index to get stuff out of the array
so here we can see all right the zero index would give us zebra
the first index would give us undefined because there's nothing there
the second index would give us the boolean of true and the third index
would give us the number of 21. so we can get stuff out of the array using the

03:48
index we can also put stuff into the array using the index so here i'm going
to fill up that empty space with bob and so if we were to then console.log the
array again we see that bob is now part of the array and it doesn't have to be
empty to put stuff in there you can actually override any slot in the toaster
by using its index another tricky thing to keep in mind is
that you can overwrite whole arrays by assigning an array to a different array
so here i have an array called cars that
has cars in it nums which has nums in it if i do cars equals nums and i cancel
out cars well now i'm console logging all my numbers so be
careful you can overwrite your whole array all right
arrays also come with a bunch of properties and methods uh if you don't
know what properties methods are that don't worry we're going to get to that
when we get to objects but length is a property here and length will tell you

03:49
how many elements are in your array and so it'll take a look at how many
elements in your array and it'll give you the number of them back so if you
look at this right here look at this array here
once we we have we have four slots or sorry four elements in this array so if
we took the length of a new array then we would get four
well numerator length gives us four all right let's look at
some code here to practice this we're going to look at in paradise after
paradise in paradise after paradise is going to pull that up
review in paradise after paradise if you're new and you need the materials
for today they're on our discord expression point discord agreed to the
rules and then in the following materials challenge you'll see
everything that we're using for today cool all right here it is

03:50
create a function that takes in an array if the first number is less than the
last number alert hi if the first number is greater than the
last number alert by and if they're equal alert we close in an hour so you
have to take in an array and then use the indexes to compare the numbers
inside of the array let's put uh let's put a three minutes on the clock here
three minutes let's get spicy with the time here a little bit three minutes and
we're gonna go over it together all right so go ahead give it the good
old hundred devs try and we're gonna go over it together give me the full
function give me the the wonderful alerts and we're gonna go over it

03:51
together you got this how do i get vs code to fit my screen so
i don't do multiple uh comments so it's called wrapping or soft wrapping
and so you can go into your settings and turn it on there's also a
a keyboard command depending on operating system you're on so if you're
on uh windows it's alt z on macs i believe it's
option z or command z something like no not command z option z maybe
option z on mac yeah or you can just turn this you can toggle
the setting in the settings menu obviously okay music just decided to stop

03:52
we hit the end of the playlist what was that online hold on it's funky too okay
all right spotify i know we've been streaming for a while but we're still

03:53
here still online we still alive oh man i wanted the funky stuff come on now oh
[Music] getting caught by the playlist we are
don't words wrap automatically now it's it's the text editor it does it for you
you might have already had yours turned on

03:54
all right let's come on back let's take a look at this together all right
[Laughter] create a function that takes in an array
all right function's gonna take in an array
uh we're gonna look at the first number the last number
i was gonna call this compare array and we're going to take in an array so
i'm just going to use ar short for array and we're going to do a conditional
uh if the first number is less than the last number so we can
do array and how can i get the first number in an array
zero nice nice that's always gonna give us the first number and we're gonna say
if the first number is less than the last number so less than and how can i
get the last number what should the what should be the value inside of my

03:55
square brackets me to get the last number yeah length minus one
some of you your python is showing length minus one right so
if we have the array.length uh that would tell us how many elements
are left in the array and why would we have to do minus one
where does that come from congrats alc yeah because we start off at zero
exactly exactly we start off at zero and so since we
start off at zero if there are four elements in the array
well that means we're off by one so we'd want to actually grab the number three
so four minus one would give us three that would give us the last element in
the array because our indexes start at zero and not one all right ready that

03:56
length minus one would give us the last element we can compare is the first less
than the last and if it is we want to alert hi else if
let's see if the first number is greater
than the last number so we'll kind of do the same thing but we're going to put
the greater than in here now the first one is greater than the last one
we want to alert by cool and if it's not greater than or last
then the only thing that it can be is equal we can just do an else
and we can alert uh we close in an hour cool
there we go we got our comparison uh let's just test it let's make sure it
works let's do compare array we're gonna pass in an array let's pass in um

03:57
one two three four five in this case we know that the first
value is less than the last value so we should expect it to alert hi
let's go ahead and open this in the browser first try nice
let's go ahead and flip flop it let's go ahead and do uh five and one
and then let's also run it to where we have five and five
right five and five so we should see buy and then we close in an hour
let's refresh this by closing an hour first are you nope
oh we got our comparison function working we're able to use the values out

03:58
of the array ready got it right hey congrats it's huge
i wanted you to write r before array.length because we are accessing
the array here this stuff right here is going to
be a number basically so if we look there is five elements in our array so a
radon length is actually five we do 5 minus 1 which gives us 4
and then array 4 is going to access the fourth index in the array so that's 0 1
2 3 4. that would give us the number one
right so all that's happening inside the
square brackets to give us a number then we're using that number to access the

03:59
array that's why [Music] this is brand new to you that hey this
is going to be rough if this is your first time seeing a raise
remember this is something that we spent two three classes on condensed into one
quick review yeah so we make sure if you're still part of the catch-up crew
that you go back you watch this you spend more time with it if things aren't
clicking that's totally okay cool all right let's keep pushing folks
all right let's talk about iterating through our arrays
let's talk about iterating through our arrays so here we have an array of best
colors green blue yellow and black and then i
just have a regular old for loop here where i'm looping through
uh and using i as my index to grab colors out of this array and so if we

04:00
were to actually run this what we're going to see
is the very first time that this loops runs i is 0
and so we're going to wind up console logging what here the very first time
exactly because if i is zero then we're going to go ahead and grab
the element that's in the zeroth index of best colors the best colors zero
index that is green the green will be console logged first
then we're gonna add one to i and so now i is one is one
less than best colors dot length best colors that length is 1 2 3 4. the best
color is that length is 4. so is 1 less than 4 yes so we're going

04:01
to console.log best colors 1 which is going to give us blue and it would be 2
which would give us yellow and then it'll be 3
which will give us black and then it'll be at 4 and since 4 is not less than 4
it is the same we stopped and so that's how we can
console log all the colors in this array we'll see green then blue then yellow
and black beautiful i miss all the power rangers stuff me too kangaroo me too
all right also built into arrays are methods that we
can use that do the iteration as well right
i can do the iteration as well so here i'm using 4h which is a method built
into arrays that enables us to loop through each element in the array
grabbing the element and the index as we loop through i like to think of it as a
goblin that is going and grabbing the element and the index every single time

04:02
for each runs now just because the goblin is going and
grabbing that stuff doesn't mean you actually need to use it so the very
first time for each runs the goblin's going to go ahead and grab green zero
and actually the whole array and so what we're going to do is we're
going to pass the green into x we're going to pass 0 into i
and we actually don't have a parameter for the array so nothing happens with it
and what we're going to want to do is this console logging x is the very first
time this runs what gets console logged green
right green's gonna get shown because the goblin went and grabbed green
zero and the array and we only had a bucket for green and zero
the next time that this runs the goblin grabs blue and one
so x is blue i is one and we console log

04:03
blue to the console then the goblin runs again it grabs yellow and two
it passes in yellow so we cancel log yellow
and we don't do anything with the number two we're done goblin runs for the last
time grabs black and three we don't actually do anything with three
but we do console log black and so we see black printed to the console so
we had an original kind of for loop when
we learned about loops that we could use here where we had to keep our own count
we have to use that count as an index or we can use the methods that are built
into arrays to iterate through the elements that are in the array beautiful
all right let's talk about some other methods that are built into
arrays other things are going to make our lives a little bit easier maybe less
to do things with arrays that we don't have to code on our own so here are

04:04
a list of the best rappers of 2020. uh on that list was six nine
polo g and then actually six nine again okay and what we wanted to do is we
wanted to shift six nine off of that list and so when
you shift what you actually do is you remove something off the front
of the array all right you move something off the
front of the array so here we have shifted
right we have shifted and we have lost six nine on the front
all right and so now if we were to console log best rappers 2020 we'd have
polo g and six nine on the end cool if we were to pop that does the same
thing as shift but on the n so shift removes stuffing from the front pop
remove something from the back and so with pop we're going to remove six nine
off the end the cool thing is whatever you pop you can actually store in a

04:05
variable if you want it to but you are messing with the array meaning that you
are literally removing it from the array so when we console log
best rappers 2020 right now we are left with polo g because we shift it six nine
off the front we pop six nine off the back and we're just left with polo g
awesome so now let's say we wanted to add some
wrappers to the best wrappers of 2020 what we're going to do here is we're
going to use unshift and what unshift does is it takes something and puts it
on the front of your array so here i've unshift
dailon onto the front of best wrappers 2020 and so if we look at best wrappers
2020 we have dylan on the front and still having polo g so
shift remove something off the front pop remove something off the end
unshift put something onto the front and we have the same thing for the back
which is push so i'm going to push dye line onto the back

04:06
and now we have dylon pullo g and dylon on the end as well so
shift off the front pop off the back unshift put on the front and push put on
the back and so now we have dailon polo g dielon in the best wrappers of 2020
and we're gonna use one other one other method here right one other method
here and that's map what's special about map what does map do
what is special about map it creates a new array exactly it
creates a new array it's a loop that grabs the element in the index and
then creates a new array i saw some i saw somebody saying i can't

04:07
understand math i can't understand map um remember we talked about in the
beginning a baby doesn't sit in the corner crying that they're never gonna
learn how to walk you gotta take that negative self-talk
out your head you can't let that show on your shoulders it's not that you can't
it's that you have to put a little bit more work to get there right just like a
baby has to get up and fall get up and fall it's the same thing with learning
how to code we can't let those those those things creep into our brain that
says you can't do it of course you can do it thousands millions of people have
learned how to code they've been the exact same spot where they felt like
they couldn't learn something and they do just like a baby learns how to walk
you will learn how to use map cool so map is a loop just like for each
and it's going to all right it's going to loop through
grab each element but it's going to create a new array so
we have a new array called best rappers of all time and so let's just put that
array up here we're going to map through best rappers

04:08
of 2020 and so the very first time we move through best rappers of 2020 we grab
dilon we pass it into x and did we do anything with x
do we do anything with x inside this map like look inside this map did we do
anything with x no we did we even use x what's the only thing that this map does
the only thing that this map does is it returns a dialon that's it
it doesn't matter what it does not matter what was in this best rapper's
2020 array it's only going to return dailon and how
many times is map going to run how many times is map going to run
three times exactly because if we look map is running on best rappers 2020

04:09
and there's three elements inside of that array
so we know that map is going to run three times and the only thing that this
map does is returns dylon right this is an implicit return because it's an arrow
function and so best wrappers of all time is the new array that we are
creating and it just doesn't matter what was in best rappers 2020 is going to
return dialogue each time the best rappers of each of all time gets dylon
then dylon and then nylon right that map ran three times it really
didn't care what was in there because it only returns dialogue each time and now
best wrappers of all time has three dylons in it right then
we're going to unshift the dialogue which is putting a dialon onto the front
we are going to push a dilon onto the back

04:10
and then if we were to console.log best wrappers of all time we would have
dielon dialon dylon dailon and dailon as they spit the hot fire cool
thank you thank you thick i appreciate that when can map be used map can be used
whenever you want to create a new array so map will run once for each element in
the array it'll grab the element and the index and instead of messing with the
old array it just puts your results into a new array cool

04:11
alrighty let's keep pushing here let's look at winter games winter games
all right let's close this one up let's look at winter games here
review winter games is the name of the folder there's a javascript file in here
create a function that takes in an array of numbers
return a new array containing every even number from the original array
now there's a there's a bonus let's say this is a bonus
let's say this is a bonus do not use map or filter
create a function it takes an array of numbers returned a new array containing
every even number from the original array and bonus if you can do it without
map or a filter uh exactly jm we do need to create a
variable or else it just goes nowhere exactly we'll just poof into thin air

04:12
cool all right folks let's do uh five minutes on the clock for this one
take your five minutes and then we're gonna go over it together
as far as you can give it the old 100 devs try and we're gonna go over it
together [Music] why would you map over an array instead
of having just make a new one because it already does that for you [Music]
i feel caught up already that swamp like i can't take but no more no more leah

04:13
i'm caught up ah yeah glad that makes sense jim do got some dunzo's okay
i'm in the ketchup crew this is where where around where i left off do you
recommend i leave here and there's the vods later continue watching
i would keep watching get your first pass here that way when

04:14
you actually go through the material at your own pace it it might
trigger some some some recalling some some space repetition
angry with the dunzo nice done can't believe it
yep all the old lessons are on youtube yep exclamation point youtube [Music]
can we reviews with the bonus it just makes it easier honestly because we
don't have to create a new array should we do prep for these not not what

04:15
we're going to do in the review class but if you had like this is like a code
wars question absolutely you should use prep we don't have enough time to do
prep honestly prep should take around 15 minutes
like when you're prepping an actual like coding question yeah 10 to 15 minutes
yup pie exactly it's a new struggle using prep for code

04:16
wars yeah a little bit extra work a little over a minute left then we're
going to go over it together and then we'll take our 10 minute break and then
come back to objects let's go what are you gonna do when you're done
tonight ruby i said um i got some new game boy advance games i got the analog
pocket pro or sorry the analog pocket so i got a bunch of like old game boy
advance games that i got and i got to put new batteries in them
so i think i'm going to replace the batteries on them that's what i'll do
and then plan out my week yep advanced wars is up there at my favorite

04:17
pokemon my favorite game boy advanced games too it's an amazing game [Music]
all right folks come let's come back through it
are you into vintage games uh gameboy is like my main console growing up so i'm
getting back into like game boy and game boy advanced games right now
they're also easier for me to get into i don't really i don't have super
amounts of like free time and so um i really like game boy like the
analog pocket i can just like pause the game where i'm at put it to the side and
pick it back up if i'm like traveling somewhere or waiting i can just like
resume my game so that's been really pretty cool so i've been into that for a

04:18
little while all right folks let's take a look at this all right
create a function that takes in an array of numbers let's start there function
face an array of numbers um only evens is what we'll call this one and
we're gonna take an array of numbers uh return a new array containing every
even number so if i can't use map and i have to return an array of every even
number um then i might as well go ahead and create a new array let only evens
equal and it'll just be a an empty array and then what i can do is i can kind of
just like loop through my array array.for each
and i can loop through each number and if it's an even number i can like push
it to the array right so if it's even i can push it to the array so
let's say i wanted to go ahead and create a a

04:19
a 4-h here so what for each i can pop off the element and the index but do i
really need the index here or can i just use the element
i actually need the element right let's just do the element
and i can go ahead and i can kind of do my curly braces here and so now i'm
going to grab the element each time how can i tell if it is
if it is an even number how can i tell if it's an even number
yeah we can use the modular structure we saw earlier tonight so let's do another
if here we do if e if e mod 2 equals zero we know it's even and if

04:20
it's even what do we want to do if it's even what do we want to do
i'm gonna push it so we would do only evens.push
and we would push whatever the element currently is
and so that would go ahead and push an even number into our only evens and
then the last thing we need to do is return our new array so we'll return only
evens let's name this function just like that only evens finder there we go
cool as we return only evens and so if we were to call this again let's call
this only evensfinder and we were to pass in an array of one
two three four five six uh we should get an array that has 2 4 6
inside of it but not 1 3 5 and right now since this is a return this would poof
into thin air and disappear so i'm going to wrap this in a console log cool
all right let's save this and see if it works and then we'll come back and see

04:21
how we did it all right let's open up the html file open in the browser
let's look at the inspector look at the console and we have an array
in the console it's a good sign and we can see that there's two four six so
definitely worked right we only have we have an array of numbers it's just the
even numbers two four and six which is exactly what we expected so first try
let's take a look at this uh it was to not use map or filter so that's why i
didn't use map or filter in this and we created uh an array
just an empty array i looped through the array that we passed into the function
and i grabbed every number so e here is just each element
i think maybe a better better variable here would have been like num
just because it it is a number each time so i like numb a little bit better here

04:22
and so i know i'm gonna grab the first num so the very first time that this runs
num is one one mod two is not zero so that doesn't work
next time this runs it's two so two mod two does equal zero and so we
would push whatever num is which is two and so two went into our array and so
now our only evens array has the number two in it then three
into num three mod two does not equal zero so we skip it then four
or mod two does equal zero so then we would push
four into the array so now our array has
two and four in it and we're going to do five
where we see num it's five five month two does not equal zero so we skip it
then the very last time this runs number six six month two does equal zero so we
push 6 into our array we wind up with 2 4 6 sitting in that array and then we
return only evens which is 2 4 6. so it's as though

04:23
this right here became the array of two four
six and that's what got console logged beautiful
now we could do this with map or filter it's the same thing but instead of
having like this uh array here right instead of having this array here
we could just maybe swap this to let's just say return
all right let's get the return away from here and we just change this into a map
right and it still works right it still works because now

04:24
map is going to return a what app is going to return to what
but we would get rid of like this conditional we would just do um num mod 2
equals 0 right and then we could we could just
return it or maybe maybe filter here would probably be best
all right we could filter it out cool same thing
but let's keep the for loop here for now for folks that are trying to do it
and this is one that practice it right practice it go ahead and try doing the
other ways and then if you get stuck ask on discord but uh yeah this is a pretty

04:25
pretty good example of kind of combining everything that we've done so far in
terms of knowing how to loop using for each knowing how to push uh knowing how
to use the conditional logic that we've seen so far using modulus again
and uh passing an array into a function understanding that we're returning an
array and so it would just return and poof into the effer and so we can
console.log it to actually see it boom all right
let's go ahead and take our break we just got through our arrays when we
come back we're moving into objects uh and so i promise we'll take a
10 minute break this time let's take 10 minutes if you're able to please get up
move around hydrate you got to get some light stretching if possible if you're
kind of if you if you i've been paying attention this whole
time let your eyes focus on something that's not your screens please you get
some light hand stretches in and uh let's put 10 minutes on the clock here

04:26
chat what are objects everything hmm try to use a little bit of oat milk oh
delicious everything well in javascript everything yeah but a collection
of variables and functions exactly a collection of variables and functions
however when these variables are tied to our objects we call them properties put
up cuber and whenever the functions are tied to objects we call them
methods so they're just collections of variables and functions we call them
properties and methods and in javascript objects do the heavy lifting

04:27
all right now when we first start thinking about objects i really do like
to think of like a physical object and so i was to start off with a stopwatch
what are some of the attributes or properties of this stopwatch and be
careful not their values but the attributes or properties of the
stopwatch in chat color is a good one brand shape size model is a good one
texture okay all right i like that yeah so we have a
uh a shape property of round a color property of black
a brand property of accusplit a model of pro survivor a oh

04:28
i gotta show you something hold on give me one second one second verb hold on so
y'all know i love my reality television that's what i that's what i do if i'm
not coding i'm not teaching i'm watching trash television but
one uh series i really love that me and my wife watch is called survivor
and so you all know i wear buffs constantly
it's pretty much always in my hair so my wife got me this lovely

04:29
this lovely buff oh still merch coming soon feel merch i feel merch
i feel a merchant tingling where does it tanked out that's that's
what the the blip account is for the only fans is for yeah so
since we since survivor made me think of this so yeah there we go
still waiting on 100 speedos if we could i would all right
so we talked about some of the properties of it shape color brand model
even like minutes seconds milliseconds here and then the
what are some behaviors or methods that are tied to this object pause the check

04:30
start stop mode yep beep reset nice so there's there's some things that this
this stopwatch object can do some of its behaviors or methods so we see
properties and methods tied to a real object well when we create objects in
javascript we can also give them these properties and methods so here
i've created a stopwatch using literal notation we'll see a constructor and
class way of creating objects but this is a constructor using regular old
literal syntax meaning i'm literally creating an object and then i'm giving a
current time property using what kind of notation
what type of notation am i using here to give it a current time property
yeah dot notation and down here i'm using dot notation again to give it a

04:31
method of tell time now how do i know that this is a property current time and
tell time is a method what's the difference here
why am i calling this a method and this a property yeah one is a function right
so when it's tied to a function that's how we know it is a method and down here
i'm calling the telltime method and i'm passing in stopwatch.currenttime
as a property so stopwatch that current time is actually i'm passing in 12 here
and then 12 is going in as the property and so i'm sorry as the parameter so the
current time is 12. and so we can use both the method
and the property that we set on the object nice

04:32
now let's go ahead and open up the objects listen to your heart please
objects listen to your heart i'm going to close this one
and we're going to go to objects listen to your heart
there's a javascript file in here however following here i want you to go
ahead and create a stopwatch that has four properties and three methods we're
gonna put two minutes on the clock for this one this one we've done a lot
using dot notation and literal object notation no constructors or classes yet
two minutes on the clock go as fast as you can stopwatch object

04:33
four properties three methods you got this go [Music]
yup savored just get into objects now going strong
how can i get this whole file if you go to our discord exclamation point discord
agree to the rules and there's a follow along materials channel that has the zip

04:34
that has all of these files that's funny flat
how do you put objects in a database we'll get to back-end development soon
and we'll be using mongodb so you know understand objects you can use mongodb
to put your stuff into a database for sure
do points not accumulate on sundays no you get channel points whenever we're
live oh glad i hope the install went well
stop that smell equals new i love it all right folks let's come together and do
this one real quick all right let's go ahead and create the
stopwatch using literal notation so let stopwatch equal and we'll use the curly

04:35
braces boom we just literally created a stopwatch object let's give it four
properties stopwatch dot color equals black stopwatch dot shape equals round
i do double quotes here i like single quotes
about that single quotes life these days all right round uh stopwatch dot
for some of the ones we saw brand i set it equal to nike and stopwatch dot
i like that one it was smell it was funny new
all right and then let's do some methods here let's do stopwatch dot start

04:36
which equals a function and we're going to make that function console.log run
great stopwatch dot stop that's going to be a function
and we're just going to tell it to console.log stop running
that's right we're going to leave it that way and then stopwatch
what's the give me one more method what's the last amount give me another
method here we have a start a stop what's what's the last method i should
use here let me give some ideas here in chat alarm morph all right morph
and we're gonna set that equal to a function and it's just going to console log

04:37
it's morph in time cool all right so now we got our four we got our four
properties our three methods if we were to open this in the browser
we should be able to access the stop i gotta change that photo um
we got to go ahead and do we look for stopwatch
we can see that there is a stopwatch object that we created
right if we ask for stopwatch dot brand we get nike back if we do stopwatch dot
start we would just get the function back if i
want the function to run what do i need i want the method to run what do i need
listen to your hours it was pretty bad we need the parentheses all right so if

04:38
we hit that ready three two one let's hit it run
all right that method worked really well cool
all right here we go so our stopwatch looks good we had four properties
we had three methods it looks like we're doing all right here
all right let's keep it moving all right what if we wanted to make
a lot of objects if we want to make like a lot of objects
not like just one or two like if we look at this
if we were using this type of notation like this little notation and we're
adding properties and methods if we want
to create another object what do we have
to do right now without knowing anything else what we need to do if we want to
create a whole new object yeah we would have to like copy and paste
all of this change it to like stopwatch two for all of these
and it would just it would that code would not be what

04:39
the code would not be what you really really yeah it would not be
dry at all because we're literally copying and pasting what we want to do
is we want to have something that can spit out a bunch of objects for us so in
the real world we have like factories so let's say we went to create a bunch of
car objects we could have a factory that spits out all of these cars and so at
first we're gonna use constructors so we
can spit out a bunch of objects and then we're gonna put a little syntactical
sugar on top and get classes so let's take a look at this
here is a constructor function and what a constructor function enables us to do
is to spit out objects so it is a function whose job is to help us create
objects right so if we look here we have this lovely function

04:40
and it starts off with a capital letter does this capital letter do anything
special to this function nope exactly evan it is just a convention
the capitalist is a convention so that you and i both know that this is a
constructor and then inside the constructor we have
some really important bits we have the this and all of these things that follow
after the dots what this is doing is making an object that has that property
whatever object comes out of this make car constructor is going to have a
property of make a property of model a property of color a property of doors a
method of hunk and a method of lock simply by being created by this
constructor we get these different properties and these different methods

04:41
and they're bound to the object that is being spit out because of the this
keyword if we didn't have this keyword we couldn't create an object that has
those properties and methods so down here we're going to go ahead and
use the new keyword along with our constructor and we're
going to pass in the different values so
if we go ahead and we create a new honda civic
we can go ahead and create honda civic equals new using the make car function
we're going to pass in honda honda goes into car make civic goes into car model
silver goes in the car color and four goes into number of doors so we wind up
having right what we wind up having is car make equaling honda
our model equaling civic number uh car color equals silver

04:42
number of doors equals four and it also has these honk and lock methods so if we
were to run this like we just put this into the inspector here think zip
and i was the ass back for honda civic we would see that honda civic is an
object that came from the make car constructor and we can see that it has a
color property a doris property a make and model properties but it also has two
methods hunk and lock cool we can also take a look at the tesla roadster
if we ask for the tesla roadster back we can see that it too is a car
made from the make car constructor but we can see that it's its values are
different the color is red the make is tesla the model is roadster the doors is
two instead of four but it still has the

04:43
same honk and lock methods as the others cool put doggo on the camera
oh they're running around all right now we talked about this other really
they right they ran into the other room russell wood disappeared uh if
we noticed something very interesting is that all of the cars that came out of
our make car constructor right all these cars we forgot to give them bluetooth
right we we forgot to give them a bluetooth right
oh y'all want the dog doggo tax let's see hold on

04:44
i do i do community goals still let's see battle points
add a new community challenge simba on cam for five seconds
on cam for five seconds goal amount one million channel points there you go
we have a new community challenge that has just started

04:45
this is if you want simba on cam for five seconds it's a million channel points
now back to our regularly scheduled programming already
i'm too busy to watch this now but i wanted to come in and say that you're
all about baddies and i'm proud of you all i can't wait to watch this later hey
jazzy fans i appreciate that coming in here and encouraging folks that have
been here for hours a i appreciate that all right
so we have these lovely constructors that are spitting out objects
however we notice when we made our civic and our roadster
that they uh they didn't have bluetooth and if i go ahead and open up the

04:46
inspector again and i asked for honda civic i can see i get it back if i ask for
tesla roadster i get it back but if i ask for tesla roadster dot bluetooth
you can see that it's undefined like it doesn't have bluetooth now
i could if i wanted to give bluetooth just to the tesla
roadster right like if i was to go ahead and do bluetooth equals true
well now the tesla roadster has bluetooth and if we if we were to
look at its properties we can see that now it has a bluetooth property of true
but what if i wanted to have every single car that ever came out of our
constructor have bluetooth right right what if i wanted to have every single

04:47
right every single car that came out of this
constructor to have bluetooth what would i need to do i would need
i would need to go to grandma exactly so what would i need to do i need to go to
grandma and so what i could do is i could i could put something on what we call
the prototype so the way i think about this is let's say i don't have a car
since i don't have a car i could ask my mom if they have a car
if my mom doesn't have a car my mom could ask their mom my grandma for a car
and if grandma has a car well i got a car right and so it's the same thing
here with our objects objects always check themselves before
they wreck themselves meaning they're going to look at themselves first
right now tesla roadster has bluetooth because we gave it bluetooth however

04:48
honda civic doesn't have bluetooth right if the honda civic checks itself it
doesn't have bluetooth so what the honda
civic is going to do is it's going to go to its parent and it's parent right now
its parent is what what is the parent of the honda civic
it's maker exactly the make car constructor exactly the civic came out
of the make car constructor so honda civic checks itself do i have bluetooth no
so then it goes up to the parent which is the constructor that
says hey do you have bluetooth no and then it goes all the way up to the
global object prototype which is grandma see if anything has bluetooth since all
these things struck out then it just defaults to saying you know what i don't
have bluetooth but what we can do just like if we wanted to add bluetooth to

04:49
all of our cars uh back in there we used to do like a recall where all the cars
would have to come back into the shop we would add bluetooth to them we could
think of it now as like over-the-air updates like we can update
all of our our cars at one time by extending the constructor's prototype so
we can go ahead and do make car dot prototype dot bluetooth equal true now
when i ask for honda civic dot bluetooth i get true
and so what happened here let's think about it honda civic checked itself
did a honda civic have a bluetooth property like did itself have a bluetooth
property sympathy hey thank you for the raid hope you're doing well
thank you for coming through are we streaming what are we all up to no

04:50
so so right now we're in the middle of explaining prototypal inheritance in
javascript uh if you if you don't know what to do we do a free 30-week software
engineering bootcamp uh everything from having never touched code to everything
you need to be employable we do it all free and all live here on twitch uh we
are underway with a seven we're almost seven hours into our review class on just
javascript getting us ready to move into back and web development with node this
upcoming week so you joined us in a in a
in a doozy of a day but glad you're here thank you for stopping by raiders
everything i hope your stream went well hope everything's going well with you
all right so since we added bluetooth to our make car prototype
honda civic is going to check itself like the object itself for bluetooth and
does object itself like does honda civic have bluetooth like does itself have

04:51
bluetooth no honda civic does not have bluetooth so
it goes up the prototype chain to right goes up the prototype chain to its
parent and since we just added bluetooth on the parent well now honda civic has
bluetooth dion a welcome now it has bluetooth right and so we are
able to go up the prototype chain to look for these fallback sources of
properties and methods but now here's something tricky
we got to remember what we just did not too long ago tesla roadster

04:52
when it checked itself did it have bluetooth
no it well sorry sorry tesla roadster it
did tesla roadster already has bluetooth let's look at these hold on let's look
at these all right let's look at these let's look at these ready let's look so
let's look at honda civic is there a bluetooth property on honda
civic here at all no but when we look at tesla roadster we
got to remember that on tesla roadster we gave it its own
bluetooth property not that long ago so tesla roadster has its own
bluetooth property right has its own bluetooth property and so tesla roadster
checks itself sees that it has bluetooth and stops there
that's it it's over it's done right because we added it earlier

04:53
honda civic however checks itself doesn't see anything and has to go up
the prototype chain to get it right so it's different
it's different tesla roadster already has it because we added it one off but
honda civic is using that prototype chain to get it from the make car
constructor timothy you created a steam page
uh you can't post links in chat but if you go ahead and send me a whisper with
it i'll i'll spam it in our chat can we wish listed already like is that what
you mean by the page like we can wishlist it that'd be cool
whisper me the thing and i'll i'll spam it in chat if you're still here
all right is this inheritance yeah this is how inheritance is handled right
uh this is how it's handled in javascript even when we move on to classes
right even when we move on to classes it's still this prototype underneath the

04:54
underneath the hood let's look at something else interesting here
so we know that there's a doors property on these so like tesla roadster
dot doors is two let's do something interesting let's do
tesla roadster dot doors dot two string so we can see that we were able to
call a two string method on tesla roadster right we were to call a two-string
method on tesla roadster if we look at tesla roadster
does it have a two string method no did the make car constructor
have a two string method did the make car constructor have a two string method
no so whose house did we have to go all the way up to

04:55
we didn't have it our parent didn't have it who do we have to go to
we had to go all the way to grandma's exactly and in this case the grandma is
the global object prototype so global object prototype
i'm sure it'll pop up on the mdn let's just do mdn here there we go boom
so if we look at the global object prototypes like all the stuff that's built in
in javascript if we look there's two string right here so if we
look there's two string so tesla roadster didn't have two string
the make car constructor didn't have two string so we went all the way up to
grandma's house which in this case is the global object prototype and then we

04:56
had access to two string right and so since grandma has two
string we go all the way back down the prototype chain
and our tesla roadster is able to use it our honda civic is able to use it they
all get access to these fallback sources
of properties and methods and so this is the beginnings of how inheritance is
handled in javascript we definitely spend way more time on this in our
individual classes way more time than we can spend during in just the review but
that's the basics of it and then we're going to see
when we get to oop how we can utilize this like mechanism to do our
inheritance but the idea here is that this is the basis of it
all right let's go ahead and take a look at the
objects street fighter work please so if you go ahead uh in the materials if
you're new from the raid and want to join us uh on discord exclamation point
discord if you agree to the rules you'll

04:57
see a follow-along materials channel and
when you go into that channel you'll see the zip for today which has all of our
starter code so object street fighter i want you to please create a street
fighter constructor that makes a fighting game character with four
properties and three methods so fighting game constructor bringing in
character with four properties and three methods let's put three minutes on the
clock for this one because we got to do the constructor
this time three minutes on the clock give it your best hundred devs try and

04:58
we're gonna go over it together you got this go go deep [Music]
will a single wait and promise to be part of the subaru no because we haven't
gotten to them in class yet um that'll be our class on tuesday and then

04:59
thursday's node minute 30 left folks am i connected to an external display
yeah i have i have three oh i have three monitors my laptop screen and an ipad
yeah it's pretty pretty beefy setup definitely not needed though [Music]
are they gaming monitors yeah i have one gaming monitor that's a 4k

05:00
uh 160 sorry the 4k 160 hertz monitor another 4k and then just like a really
crappy 1080p monitor but i don't pay for any of my stuff this is all pd funds
every bit attack i have i have not paid for [Music] on my game on pc
so i can switch from my whole setup i have three buttons i
press and it switches from mac to pc i press three buttons and it all goes from
pc to mac with my entire screens and everything

05:01
all right folks come on back come on back all right
let's create a street fighter constructor that makes a fighting game
characters with four properties and three methods so function
uh let's call it street fighter and let's go ahead and what are we what are
gonna what do what do what are some properties that we want our street
fighter to have what are some properties kvm life exactly name uh let's see name
health speed that's cool and special move

05:02
there we go all right so let's set this up this dot name equals name
this dot health equals health this dot speed equals speed and uh this dot
special move equals special move cool how about some uh some methods here what
are some methods throw i like that this dot throw equals function

05:03
this console log cool what else taunt this dot taunt equals function
go ahead and do a console log let's use a template string here you can't handle
my and then we're going to throw in using a template string here special move
but we want to make sure we tie it to the special move that this object has so
this that special move that's going to give us the special move that whatever
the object comes out of has cool and one last one here i don't
street fighter folks you know what screw it but make some nerds mad right now

05:04
get over here get over here go all right and let's go ahead and create
let's go ahead and create one of these street fighter objects let's say let um
chun li equal new street fighter we're gonna pass the name chun li
health 100 speed definitely 100 special move we looked this up last time
what's the kick thing called again oh we looked this up last time

05:05
spinning bird kick there's like a fancier name for it though hurt kick all right
there we go cool all right and so we can save all this
let's go ahead and open this in the browser
and let's go ahead and use the inspector console
let's ask for chun li back and we can see that they are a street fighter
character with a fatality method a health property a name a special move a
speed a taunt and a throw let's go ahead and do chun-li.taunt
and you can't handle my spinning bird kick twirling avian foot punch alrighty
cool so we got our constructor review in it's going to chill the music here

05:06
and um with the newer versions of javascript
however when we got to es6 and forward we got some syntactical sugar
that went top of our constructors called classes and so a lot of other
languages have classes built into them we added the sugar on top
of our we added the sugar on top of our actual
constructors to make it easier for folks that were joining us
make it easier for folks that were joining us hold on one second

05:07
she's like you've been streaming for too long all right alrighty so
we added this lovely syntactical sugar-free symbol
we added this lovely syntactical sugar on top of our constructors to make it
easier for folks coming from other languages
and but underneath the hood it's still prototypal inheritance right
underneath the hood it's still prototypal inheritance nothing's really
changed it's still the same deal so the syntax is a little bit different
right we use this class with the make car we include our constructor inside of
it and then our methods don't require the this keyword they're bound
automagically cool that sound is 20k 20 000 20 000
channel points for that cell that's wild all right

05:08
let's go ahead where are we at all right we're pretty close to the top
of the hour um let's go ahead and take a look at our apis
and we're going to take a break very soon
um actually let's take a break a little bit early let's put five minutes on the
clock five minutes on the clock uh we will take our break if you're able
please get up move around hydrate when we come
back from break we're gonna dive into apis welcome back welcome back let's get
into this home stretch how long we've been going for
almost seven hours exactly let's go turn up hold on 10 second warning 10 second

05:09
warning five seconds four three two one [Music] so [Music] hey does this work

05:10
our elsif our elsif our elsa all righty everybody oh let's get into it boy
we've covered a lot so far folks a lot so far tonight and our seven hours of
being live so we so far let's recap we started off with the basics of
javascript what is programming what the heck is a program
all the way from fundamentals like basic logic building up the basic logic gates
to building up to a language that we can
understand that is javascript we covered
the big four the variables the functions the loops the conditionals we added
arrays and objects on top and now we're getting to apis folks we're gonna get
the apis we're gonna do a little oop we're gonna talk about the hunt
feeling good i'm feeling good all right uh chat what are apis

05:11
hey a simple interface for a complex action let's go just a simple interface
for a complex action that's all it is simple interface for a complex action
so let's think about let's think about a tv i got a tv
in front of me i want to turn the tv off that's in front of me
all right i want to turn off the tv that's in front of me what can i do
what's like what's the most primal thing i could do to turn off that television
i could smash the crap out of it i could rip it off the wall throw it on the
ground boom tv is turned off i could rip the power cord out the back boom turned
off now is that the best way to turn off our televisions probably not

05:12
there's probably some better ways to know if our televisions uh apparently
a lot of times televisions come with a remote and that remote has an interface
and on that interface is a button that i can press to turn off my television but
think about all the complex stuff that has to happen when i press that button
right the button press triggers an ir sensor the ir sensor received by the
television television has all this circuitry inside that hears that request
figures out what it needs to do turns off the television right it's just
an interface the interface in this case is the remote that enables us to do some
complex action i also like to think of a menu at a restaurant
starting to lose my voice a little bit tonight i think i'm going to need to get
some some noodle soup after this and so i'm thinking of some pho all right so
i'm going to go to my favorite faux restaurant when i sit down they're going

05:13
to give me a menu and from that menu i can choose something
and some complex action is going to happen in the kitchen
right some complex action is gonna happen in the kitchen now do i know
what's happening do i know how they're chopping uh the onions so i know how
they're preparing the tofu do i know how much water they're using to to make the
noodles do i know how they're combining i don't i just say vegan pho
and out comes a delicious bowl of soup the thing that's happening in
the interface like the interface is the menu but what's happening that complex
action i have no control over right i just use my interface and a delicious
bowl of soup comes my way diwa vera hey thank you for the hydration curious

05:14
to you thank you so the idea here is that we have these
interfaces that we can use and when we use the interface something
complex happens just like i can look at the menu point to vegan pho and then all
these complex stuff happens in the kitchen and i get a delicious bowl of
soup back well when we're using web apis a very similar
thing is happening we are making a request that request is going to a server and
that server is responding with some information and so just like i said
vegan pho that request goes to the kitchen and i get a bowl of back we are
going to use urls as our interface so instead of a menu or a remote we're
going to use urls we can make requests to those urls which is where a server
will hear that request the server will do what it has to do to generate the
response and then it's going to respond back to us and typically instead of
sending us a bowl of soup as much as we would want we're typically going to get

05:15
an object back or a javascript object notation back and once we get that
object back we can parse it and play with it and make it do the things that
we want to do with it so apis simple interface that does
something complex the wave appears that we're using instead of it being a menu
or remote it's a url we make a request that url we get a response as json or
objects back so here is a quick example we have this lovely fetch
where we make a request to the dog ceo api and we get some data back let's go
ahead and try this real quick open up my inspector here boom
and you can see that i got a lovely message back that includes a lovely dog
photo and a status of success so i was able to use this url to make a request
the server heard my request and sent a response all this complex stuff had to

05:16
happen on the server that i don't care about had no control over they had to
like hear my request they had to go to the database to get a photo they had to
put together the object and then send it my way
and then what i was able to do was make sure i was dealing with json or an
object basically and then i was able to console log the response they sent me
that response got sent through data and i console logged the whole thing so i
was able to make a request to a url that server did a bunch of stuff on its end
sent me a response and i'm able to use that response to do some cool stuff
and so let's go ahead and open up the dog photos
uh starter code so dog photo starter code here
go ahead and close these two that we're working on before
dog photos let's go ahead and open up objects and dog photos
main js here we open up the html while i'm here as well beautiful

05:17
all right so the prompt is get a dog photo from the dog ceo api
and place the photo in the dom cool let's go ahead and
put three minutes on the clock for this one three minutes on the clock
you're basically copying pasting and then trying to get the return into the
dom so go ahead and try it three minutes and we're gonna go over it together
you got this is this consider scraping no uh because we are making a request and
they are giving us a response scraping would be like when you go to their site
and you grab everything on your own they've set this up so that when you
press the button on your remote or you order off the menu you get this stuff
back so it's not scraping because we're literally making the request to them and
they're giving us data back scraping you do it on your own you don't they don't

05:18
actually give you anything can we set up servers with our own apis
oh boy are you gonna have a lot of fun this upcoming next two weeks
that's what we're gonna do first is build our own api so that people can
make a request to our servers and get data back
remember you can just use the example from the slides here let's go ahead and

05:19
copy that start if you're having trouble starting all you got to do point it
minute 20 left you got this push push push
so we're building a power rangers api we could
really easy we'll see people think the back end is this really big hard thing
to do now we're gonna make it easy i know it sounds like a big big thing to
say but it really is uh pretty pretty pretty fun i think once you get to the
back end it becomes a lot fun because you can you can build whatever the heck

05:20
you want like having that power to build whatever you want is intoxicating
mikey with the dunzo e super remotes at coding rocks i agree
what's your favorite punk band that's hard
i mean like right now like i mentioned last class two classes ago like right
now i'm really into idols if you consider them like new punk
i mean i grew up on sex pistols but that's kind of generic [Music]
but yeah i mean i don't care i like what
i like sex pistols is always my favorite growing up
all right folks come on let's go ahead and do this

05:21
favorite concert you ever attended oh that's an interesting question uh
it was a wiz khalifa concert it was lit it was like real lit
i was probably one of my favorite concert experiences
that and when i got to see five iron frenzy live like that was like uh
i was a spiritual moment in a basement yeah yeah so i i think most of it was
definitely was khalifa and then like favorite like transcended reality was
a five iron frenzy in a basement in boston cambridge all right
let's go ahead and take a look at this together i'm just going to copy this
while we're here you ink all right get a photo from the dog co
api and place the photo into the dom all right

05:22
so now we have our fetch our fetch is how we like press the button on the
remote it's how we make the request like pointing to the item on on the menu
right we're going to make our fetch that's going to make the request to the
server the server will hear our request and hopefully responds with some
information whatever they respond with we're going
to parse as though it's json or javascript object notation and then
whatever they send us back will be passed into data so the very first thing
i want to do is just console.log the data and see if we're getting anything back
all right see if we're getting anything back
yep oh this is the right one let me open up the right file
all right here we go let's open this in the browser
let's see if we're getting anything back first
all right we did get an object back which is great
we can see that it has a message property and a status property

05:23
and the message property right the message property is actually
an image i know we can't see there we go
it's actually an image so what i want to do is i'm going to be able to just grab
the message so i can just grab the image so let's go back here and instead of
console logging data i'm going to use the message property here and do dot
message and do dot message all right let's save this let's refresh
all right now we're just getting the image which is nice
right now we're getting just the image back adjust the image back
and now i can use that to my advantage if i want i can use that to
to be put into the dom because i would see it we want to place the photo into
the dom let's go ahead and take a look here
we do have an image already in the dom so let's go ahead and put the source for

05:24
this image as whatever came back from data dot message
let's go ahead and do that here in the javascript so let's target the image
document.queryselector and let's go ahead and do image
and then let's change the source of the image to whatever came back from the api
or whatever is in data dot message cool so that should grab the url that we
got back and plug it in as the source on the
image that we already have in the dom and if we come back and refresh
daw look at the little little doggo dawg dory's a cutie patootie look at that

05:25
[Laughter] oh so pretty oh my gosh it's a pretty dog tervuren
i've never heard of that type of dog before her tervuren cool
really pretty right wow all right so it's working we're able to
each time we refresh each time we refresh the page right
each time we refresh the page we're making a new fetch
that request is going all the way to the dog ceo api
they're hearing our request and they're responding with a json object we're able
to parse through that json object get what we want out of it
and use it to update our dom with an image source and that's why we're able

05:26
to see the image in the dom cool alrighty
let's keep it moving folks i'm going to close some of these because we got a lot
of tabs open look at all these tabs we had open
oh we've been putting it on work let's go turn up
all right we cut it some dog photos [Laughter]
now there's also like another step that we can take this which is where our
the url that we're passing sometimes we're going to want to pass
some extra bits of information along to the api provider right so with the dog
ceo it's dog ceo api we just made a generic request like hey
we hit that one url give us something back but with something like the
cocktail database we can ask for specific stuff back so here i'm saying
hey i'm going to pass in a query parameter

05:27
called s with a value of margarita and so this is short for search it's going
to enable us to get just margherita drinks back and so the cool thing here
is that a lot of times we're going to have like a base url
and then after the base url you're going
to put a question mark and then all your key value pairs your query parameter
value pairs so s is the query parameter and then
margarita is the value so you could do s equals margarita and then
if you want to chain multiple query parameters right if you
want to change multiple query parameters uh what do we put in between each query
parameter value pair how do we how do we how do we keep adding multiple query
parameters yeah we add an ampersand just one though
just one and so we could have s equals margarita
and day equals saturday right whatever whatever they tell us to do
right we'd have to read the documentation to know what query

05:28
parameters they accept but once we know what query parameters they accept we can
build out our urls so we can get those specific drinks back all right
so let's take a look at this one real quick let's let's uh let's use this real
quick here um we're going to just grab this url just so we can see
yoink i'm gonna go back to our dog ceo api here um i'm gonna put this up here
and i'm just gonna copy this so that we have a clean one sitting here
and then i'm gonna have the one that we're gonna mess with here
all right so instead of hard coding the url here i'm just gonna use our variable
from up top url and the cool thing is we can see that
all right here's our question mark which
means everything that follows afterwards
is a key value pair so here we're saying
s equals margarita we can change this to whatever the heck we want because it

05:29
accepts a lot of different drinks i think we saw whiskey was one i think we
saw that um gin was one a bunch of different stuff and each time we do this
we're gonna be able to get a different uh type of drink back so let me get rid
of the specialized stuff we have here let's just console log data and see what
we are getting back when we hit the cocktail database and the cool thing if
you're working with this uh database that there is like
non-alcoholic drinks too so if you want that you can use the non-non-alcoholic
version as well all right so let's go ahead and
go to our site here let's refresh bye bye to this beautiful dog
and you can see that we are getting drinks back from the api
this always blows did you see how fast this is it just blows my mind like this
request left my computer went through a vpn from the vpn all the
way to their server their server heard my request generated the response

05:30
responded to this responded back to the vpn all the way to my computer and then
back here and i was like like a second not even this blows my mind that this is
how the internet works and it's so fast right like this had to go to somebody
else's server it had to go to somebody else's server and back
right like that that just blows my mind every single time i work with this
though i'm just like what cool all right so we got some stuff back we
got some drinks back i got some drinks back
and uh we can see that there is a drinks property but that drinks property is a
what the drinks property is a what it's an array and then in that array they're
objects and then in those objects they're properties so i just want to get the
drink photo let's kind of do the same thing we just did but this time instead

05:31
of being cute dogs it'll be pictures of drinks so straw drink thumb is inside
the drinks objects that are inside the drinks array
so what we can do here is we know we're gonna get some data back
and we know that there is a drinks property and that drinks property is an
array so i want the first object out of that array so what should my index be if
i want the first object out of that array i'm not sponsored by nordvpn although
hey hit me up baby come on make that deal come through i got you
do you not realize that we have 1500 people here on a sunday for seven hours
pretty sure we'd use some vpns this is all sponsored by raid shadow

05:32
legends exactly i can't wait to get a raid shadow lesson
sponsorship gonna spam the crap out of it that's all
it's gonna be it's gonna be like all over the stream like it's just gonna be
everywhere i i can't wait now i i really don't like i've turned
down a lot of sponsorships like a lot of people when i spot to the stream i
turned them down because if it ain't free i don't really want to mention it
so i turned on a lot of ones that weren't like acts like actually free
i don't know maybe i'll sell it one of these days but yeah i don't like i don't
like sharing stuff that's not free so the reason why microsoft has been so
amazing to partner with is because they make
so much of their stuff completely free so i really like that that was pretty
cool same thing with hash node they make it free yeah cool

05:33
all right data.drinks we saw that drinks was an array
we saw there was a bunch of objects i want the first object out of that array
and then we're going to grab that let's let's do that let's just see if we get
the object from doing this first all right let's refresh
boom we got the object here so we got the first object that was in that drinks
array and then if we're looking at this object we see that there's a drink thumb
stir drink thumb let's see if we can just grab that so dot extra drink thumb
cool let's save this of course bumpy i love that there's some people that

05:34
come in here like this is still going like what [Laughter]
yes it is let's go let's go we in here we online we outside
all right so now we're getting just the drink back well just the image of the
drink back which is good let's go ahead and plug that into the dom so document
that query selector let's grab the image and let's set the source equal to this
data dot drinks dot stra drink um here we go yeah
so here's that drink extra drink thumb so that should be able to give us that
drink let's go ahead and refresh boom there we go we're putting into the
dom look at us go get that drink tasty beautiful alrighty

05:35
let's keep it pushing folks got through some basic arrays we made fetch happen
um but why do we use objects why do we need constructors why do we
need classes like why do we need all this stuff so we talked about objects
we learned how to use them we're even using them when it comes to apis but why
why use objects at all like what does this help us do
well i see a lot of really good reasons you can work with others organization of
your code better structure easier to make changes more reusable
all these things are really uh really important teamwork really important
exactly so let's talk a little bit about why
last repetition hey all right all right we've been paying attention these past

05:36
couple classes i like to see that all right so what if there was a system
nay a paradigm nay a set of rules that we all agreed upon to structure our code
and this structure made it easier to add new stuff
it made it easier to read through it was already coded i made it so that we were
not afraid to make changes late at night well this is always your warning at the
bottom of the slides whether there's a system a paradigm set

05:37
of rules or a greater way structure to do it well boys [Music] all right
object-oriented programming is that system that will make it so that we can
add new stuff easier make it read through what was already coded enable it
so that we're not afraid to make changes let's talk about it
these things that we're going to cover very briefly
we spent what three or four classes going three classes going through fully
um so we're going to go through this just as a point of review but we
literally have three classes on each of these really important four pillars of
oop so we're going to cover the review but know that we've covered this across
like three classes so if you don't know what oop is you've never used it

05:38
you want to see some actual examples with like real things that you could
actually use it with watch those classes and then we're going to be putting them
back into practice as we come back next week because all this stuff actually
becomes really handy dandy when we get to the back end cool alrighty so
we have a this idea right that what if we want it to fuse
our data and our functionality into one object well that's where encapsulation
comes into play the idea of encapsulation is to store
all your functions and the data they work on into one object
so far a lot of the code that we saw today very procedural kind of our our
variables are all over the place our functions are all over the place we're
not really sure if the functions are working on that data or they're using
some other type of data well we can bring all of our variables and all of

05:39
our functions into one spot and when we do that we are using
encapsulation and so it really is just the fusing of our data and our
functionality together and the reason why we want to do that is because it
helps us kind of handle right because it helps us to
helps us to keep our code more organized we know where to go we know where to
make changes we know what to see and we don't have to worry about making
kind of just simple mistakes it keeps our code drier a lot of different things
that we get from using just that pure bit of encapsulation
now what if we also once we have our stuff encapsulated right we fused our
data and functionality into one location what if we wanted a way to kind of
reduce the complexity of our code to hide unnecessary details
what if we wanted to implement things or work on our code

05:40
without thinking about all the hidden complexity behind that code when i get
in my car to drive i don't want to have to think about how the engine is mixing
the fuel ratio i don't want to have to think about my intercoolers doing the
job i don't want to think about all these things
when i sit in my car to drive same thing when i'm writing code i want to know
that that bit of code that the other engineers worked on is doing its own
thing i'm not going to it up and i can just focus on the code that i want
to write this makes it so that our code is in
more smaller more manageable pieces and enables us to really only do stuff
once once i've done something i know the other engineers can use it i can take
advantage of their other stuff if i'm building a new car somebody's already
worked on an engine i don't need that i don't have to manufacture or make a new
engine i can just use the engine that they built in my car
so that's abstraction right abstraction is this idea of hiding out the complex
unnecessary details it makes it so that our code is more manageable and reusable

05:41
and makes it so we only have to do stuff once boom
with abstraction we hide and hide the details we show the essentials making
our code more simple predictable manageable
what if we want to create new objects based on old ones
right so we put all this time into encapsulating our data abstracting our
data what if we want to start creating new objects based on our old ones
well if we could do that we're going to eliminate a bunch of redundant code we
don't have to copy and paste we don't have to re-type everything out that
eliminating of the redundant code would lead us to inheritance so we've
encapsulated our code we've abstracted away the details we're able to make new
objects based on old objects and then the last thing
is that what if we wanted some code that automatically works with a bunch of
different objects that we created right what if we could write code once
and have that work with all the objects that we've created we don't have to have

05:42
messy conditionals or switch cases the loops that we write would work each time
we create each time we create a new object we don't have to go and update
some other area of our code well that idea of having a bit of code that works
automatically with a bunch of other different objects instead of
conditionals or switch cases well that's polymorphism so these four pillars
come together to make the basis of object-oriented programming we went
across these over at least three different classes it took us to get
through all these four pillars so this two second two minute overview is not
indicative of what we learned it's just to get those ideas fresh in our head
again but please if you have not watched
our oop classes they are here on youtube
if you're watching on youtube uh go just a few classes below in the playlist
you'll see that we have some wonderful classes that break down each one of
these with details with examples you'll be able to see it understand it this is

05:43
a hard concept for you to understand a lot of other tutorials suck at
explaining it we tried our best cool so encapsulation the process of storing
your functions or your methods with their associated data aka the properties
into one object but what was the reason why would we
need a compilation why would we need encapsulation why do we need to actually
do this well when we encapsulate our content our our
properties and our methods together into
one object it makes it easier to add new
stuff like we know where to go to add it it makes it easier to read through the
code because we're not worried if like that function's working with that data
or that data is working with that function since it's all encapsulated in
one place it's easier to read through it was already coded and it makes it so
we're not afraid to make changes when we
update one value to another we know that all the functions are using that data
and we don't have to go chasing anything throughout the rest of our page

05:44
abstraction enables us to hide the details and show the essentials but why why
would we need abstraction well it breaks our code down into smaller more
manageable pieces of code if i'm an engineer working on a car
i can focus on the buttons on the steering wheel and not have to worry
about the engine or the wheels or anything else i can just focus on the
steering wheel i can just focus on the buttons on the steering wheel and that's
it i can make changes and still sleep at
night with abstraction meaning that if i update the button on the steering wheel
i'm not worried about what's happening on the engine or how the the the what
the windows are doing or what the tires are doing i'm able to
have my code broken out into small and more magical pieces of code and i'm not
going to lose sleep at night because i know that they are abstracted away from
each other inheritance enables us to make classes from another

05:45
class to share a set of properties and methods but why would we need
inheritance why is this one of the four pillars of object-oriented programming
well it helps us eliminate redundant code
if i wanted to make another car i don't have to i don't have to copy and paste
an engine attires doors windows i can just inherit all of
those properties from a car making class that we saw earlier today with the make
car class wonderful polymorphism is a piece of
code that automatically works with all the different objects that we are
creating the cornerstone of how we build our
applications going forward will be with objects so it makes sense of all the
code that we're using can work with all of those objects and so this
polymorphism like why why would we need it well
helps you avoid a lot of else if else statements and switch cases a lot of
times when we update objects we might have to go and update other bits of our
code to work with them with polymorphism we don't all the objects that we create

05:46
will work with the code that we've written elsewhere so we're not keeping
track of multiple things and it really does help support the other pillars of
oop makes your code more reusable supports the other pillars boom
it's like a five minute overview of what took us nine hours
remember that took us nine hours to get through so please
uh oop is still very fresh it's something that we spend a lot of time
going over so go back through uh our classes on that if you haven't gone to
it yet all of our contents on youtube completely free
without it's not monetized so there's no ads at all no ads baby let's go
alrighty let's see i want to cover the stuff we covered for
the hunt as well we're going to skip the the building out of the um class
using oop we did that in class i feel comfortable skipping that and i want to

05:47
cover the things that we did um more recently when it comes to the hunt
i think we'll get through this hunt stuff and then i feel like we'll be will be
good and i think that'll be our review all right
with the mern stack we'll be learning data structures
uh yeah we'll be doing data structures so we'll be doing data structures um
as we get towards the end of the program when we do more hunt yeah more hunt
related content yep cool alrighty don't end early there was no end time
there's no way for us to end early we didn't have an end time for this so

05:48
there's no end dig early all right let's talk about the stuff for the hunt
all right so checklist if you haven't already go
ahead and grab the checklist uh the link is here in the slides uh the checklist
has everything that you need to be doing to get your professional life in order
all right your professional life in order so uh there is literally a
checklist that you can follow that gives
you real examples that gives you exactly what you need to do for your portfolio
your resume your linkedin your angel list your github your twitter your cover
letter your cover email your resume everything is on here that you need to
get your professional life in order please you have to have this in order
you need these things marinating so by the time you're ready for the hunt
you're ready to go all right if you ever need the checklist you can
always here in chat do exclamation point checklist right

05:49
exclamation point checklist and that will give you the checklist that you
would need to make sure you've done all these things but we've assigned it for
homework like three or four times now you should have it done by now cool
all right we talked about this idea of everything
we do going forward in terms of the hunt is about passing a sniff test
as folks coming out of a training program or a boot camp we all have a smell
and that smell is what causes a lot of folks to not get past the first rounds
of their interviews it causes them to not even get to the nerds where we can
wow them with our technical acumen and the project that we sunk hundreds of
hours into and so a lot of things we talked about last
week and we'll continue to talk about are opening as many doors as possible

05:50
and helping us get past this initial sniff test so that we can
show off what we know how to do cool one of the things that we can do that's
very very easy to help with the sniff test is that you should be pushing code
every single day that means you should be doing your code wars
adding it to a file on your local machine and then pushing that that
solution up to github and you push it every day so we can get those delicious
delicious green squares that when recruiters look at your github profile
when hiring managers or folks on the team that might be interested in hiring
you look at your github and they go to ask does this person code and they see
that you have a green square every single day for the past year they'd be
like oh this person codes they do right and so that helps you get
past that initial sniff test every day push your code every day get one of
those delicious green squares all right talked about the most important thing
you'll probably do in your whole entire career it is a hit list

05:51
for folks that are joining us that are using this review as your first kind of
your first start into the 100 devs ecosystem right if this is your first start
one thing you want to do is you want to make sure that we are being targeted
with our job hunt we do not click apply ever ever ever ever ever we do not ever
ever click apply and so the way that we get our jobs is
by networking and getting recommended into our positions the cornerstone of
getting that recommendation of getting the referral into these jobs is your hit
list with your hit list you're going to use
the sheet you can do exclamation point sheet here in chat
you'll notice that we have a new tab called hit list and here you're going to

05:52
find the companies which you would like to apply to that have open positions
that fit your skill set and experience you're going to add those companies with
the open positions to your hit list and then you're going to find folks that
work at those companies that you can actually talk to we're talking about 60
networked recommended applications where we get recommended into 60
opportunities that's what you're signing up for not one not two not five not ten
not twenty not thirty not forty not fifty sixty where you found an opportunity
you added it to your hit list and then you found the recruiter the engineering
manager the folks on the team you reached out to them
you found a living breathing human that you can talk to you had a coffee chat
with that you eventually asked for the referral once you get these referrals

05:53
from the hiring manager the the person on the team the recruiter whatever it is
you get these referrals and that counts as one of your 60
networked it applications now the reason we do 60
is because you're going to have 10 that go absolutely horrible another 40
that's gonna be real real mid like just just okay
and then about 10 that'll go well and out of those 10
you'll get one to two offers so 60 network where a living human breathing
person you've talked to has your resume has brought you into the process results
in one to two offers remember folks i've helped hundreds of folks get jobs help
thousands of people learn how to code the reason why you see some folks that
say oh i applied and i never got a job or i submitted 500 applications they

05:54
never got jobs because they did it wrong if we're networking our way into 60
opportunities and only getting one to two offers there's no other way to do this
there's just not now one person here or there might get
lucky one person here or there their first interview is the one that that
lands the deal that's great they don't have the data that i have
of folks that have gone from boot camp into jobs over the past five plus years
i've been teaching at boot camp for the past 10 i know the numbers
we're networking our way in the 60s so we get a chance at one to two
opportunities which means that when we go into this process we go into it like
warriors it's called the hunt for a reason that means we're gonna have 58 that
don't go our way and one the two that unlock a beautiful career for the rest
of your life i'll take those odds it sounds like a lot because it is
but you're talking about a job that pays well is in demand has high growth

05:55
is constantly rated as one of the happiest jobs to have that's what we're
shooting for folks don't feel ready we'll get ready then
we got the hunt coming up and uh just don't ever click apply all right
eventually we're going to talk about our high value applications where we've
networked our way into 60 these applications and 30 of them are going to
have custom resume custom cover letters a custom story about why you're the best
things to slice bread and why you'd be amazing fit for the team we're gonna
have 10 premium apps so 10 of those 60 networked applications once we get in
we're going to do a lot of extra stuff we're going to do uh
custom stuff we're gonna do tweets blog posts small simple one to two day

05:56
projects to show that hey we could hit the ground running on this
team the things that you're looking for i we already know how to do and so those
are our premium apps we haven't really covered those too much yet but know that
that's coming uh the 60 that we will get recommended into 30 will be high value
10 will be premium and 20 will just be kind of like fodder we want to have our
first 20 or so interviews as like a way to get comfortable right
right as a way to get comfortable to to have our vomit moments sorry i
shouldn't say that to have our our moments where things just go wrong
with the companies that we really don't care about
so we haven't talked about that part of the strategy yet but know that that's
coming you also have your 100 hours project to
be thinking about a project that you're going to sink a hundred hours into
right it's not it's it's i hope you're starting to realize that it's not an
accident that our folks have gotten hundreds of jobs from 100 devs the fact

05:57
that we live up to our namesake because we're doing the work that other people
won't do not only can we crush coding challenges
because we've been doing a code wars every day for months
not only do we have real clients that have paid us real money not only do we
have projects that we sunk hundreds of hours into not only do we have
projects where we worked as teams not only do we have
beautiful portfolios github's resumes all this comes together and we're
running circles around every other person that tries to do what we came to
do and will do cool once you get past that sniff test
i feel bad for a competition me too i feel real bad for them

05:58
but i don't because the past there they just don't want to do it
it's a hard path it's a lot of work it's a lot of work
all right once once we get the interview once we get past that sniff test
there are some things we've got to realize
there's a process here and that process has a lot of different things that could
happen each company is wildly different right each company is wildly different
but we get recommended into our roles which
often helps us pass typically the first round which is like a phone screen or a
behavioral if you do have a behavioral round
they're going to ask you the traditional interview questions
what are your greatest strengths for your greatest weaknesses those types of
questions then you might have around where you're asked just like technical
questions where you're talking about tech talking about code you're talking
about things that you might come across on the job
you might have a take home which is like a coding challenge that you do on your
own you might have a whiteboarding challenge where you're literally on a

05:59
whiteboard or you're literally live coding in front of some other engineers
we might have in-persons again nowadays where you like go into the office and
you have a couple coding challenges back to back to back they might even have
like a wine and dine interview where they know you want they want you on the
team so they take out the dinner et cetera et cetera then you have the offer
now each company does this process differently but these are kind of the
stages that you can think about that you might encounter cool
now we talked about this last week but once you get recommended your goal
your job in that moment is to know every single thing about their process
if you've gotten this far you've gotten past the initial sniff test
got past the initial sniff test you have a technical or behavioral coming up you
have to know every single thing about their process you're going to go hard in

06:00
the paint you're going to go on glassdoor github blind you're going to
go wild looking for every detail you can
find about their company and how they do their interviews and you're going to go
in prepared you're going to ask the interviewer hey what type of interview
am i walking into is it behavioral is it
technical should i expect to do a coding challenge oh what kind of coding
challenge is there anything i should prep any specific data structures
algorithms that i should know you know every single thing about the interview
that you're going into don't go into your interviews like an accident
don't do it there's no need to you should not ever be nervous going into
interview going i don't know what to expect no you have asked them
what to expect and you know before you go in what you're gonna do that day
and then on top of it you went hard looking up on the internet every single
thing about their process if you look at our class on thursday i showed you very
simply how we found parts of different companies processes
right that's what you got to do imagine if you do it and you figured out

06:01
somebody's going to hand you an 80k plus check cool now
you've gotten recommended in you know what type of interview you're going into
there are some specific ways to prep the bank is one of our keys to success
at 100 devs right the bank is our keys to success with the bank we have
hundreds of questions that we are going to have memorized hundreds
i feel like when you get there and not know enough everyone does
every company does everything so differently that we show up right we show up
and we gotta learn on the job so that's why the most important thing that we do

06:02
at 100 devs is not learning to code it's learning how to learn
so that way when we show up in the job we have to learn all this new crap we've
already been doing it we've been doing it for months
and that's why we run circles around other entry-level engineers other
entry-level engineers didn't have to learn stuff that we had to learn as
quickly as we had to learn it at the pace we had to learn it
and so they never committed to learning a process getting better at their active
recall their space repetition even if they went through a four-year degree
program they kind of went through it in four years they didn't they could have
went through that whole program not actually knowing how to learn well guess
what you know how to learn and so when you show up on that job
you won't know everything nobody ever does you've got the best engineer in the
world they're going to show up and have to do the exact same thing as you read
the documentation talk to other engineers look at the style guide how do
they want me to code here then you spend all that time that you learned how to
learn to learn on the job and ramp up every engineer has a ramp up period
typically three to six months do you believe that an associate degree

06:03
is enough to get a software engineering job yes i've helped hundreds of folks
with zero degrees uh folks that did not complete high school get jobs as
software engineers uh so yeah definitely doable cool
all right so here are the questions that we prepare there are 22 behavioral
questions that we prepare and with these 22 behavioral questions
we're prepared for every question that comes at us during an interview not
because every question is on this list but because there's enough material that
if you prepare these right there's enough material if you prepare these
that you can pull together the answer you need in the moment and so
the reason why we prepare these and we spend every single day for months
reviewing them in anki is that when we're in these interviews it comes out
like butter smooth smooth smooth molasses blows from

06:04
our mouths it sounds like we've been doing this for years but really we went
hard in the paint with enki cool we also have hundreds of technical
questions they're gonna help us fill in the gaps for the things that we were not
able to cover during class there are even questions to ask your interviewer
bank is the way time and time again i have students that
come back to me and they say leon thank you for making me do the bank
thank you for showing me to do the bank because it was the thing that helped
them get through their interviews last cohort we saw almost half of our folks
that got jobs did not have technical coding challenges as part of their
interview so their interviews were show me your projects show me your 100
hours project talk to me about the clients that you worked with let me ask
you some technical questions and then we destroyed it in every sense of the game
because we've been reading and studying and doing technical questions for

06:05
they're all part of the bank so half's not hard but it's a lot
and the bank is part of that start so please start the bank
maybe not today because we've been going for a long time we've been going for
almost eight hours so maybe today's not the day to stop the bank but tomorrow
you must start the bank you need to get your anki going you need to do it every
single day or you are wasting your time with this process just stop
it's not worth putting yourself the next three or four months
if you're not going to do what it takes to actually get the job and the bank is
part of it cool we have behavioral questions and behavioral questions we have a
strategy to get through them called car cause action result
cause action result for every single behavioral question

06:06
you're gonna give the cause like what actually happened the action that you
took to solve that problem and the result why are you the best engineer on
earth because of the thing that you did why are you a better engineer because of
the result that you took this is not a time to be humble you want
to talk your talk present yourself in a positive light even if you're giving
away something bad that happened you want to show why you're a phenomenal
engineer because that bad thing happened we like to use words when we're talking
about the cause like at my last company at my last opportunity there are a lot
of things that you can do that snitch on yourself that shoots yourself in the
foot out the gate most interviewers doing behavioral questions don't care
they have a list of questions to get through to make sure that you can go
talk to the nerds you don't have to give everything away you can you can give
just a very surface level answer and they want to dig they will dig

06:07
most of the time people will not dig are we filling in answers for the
behavioral questions in anki to memorize
yes you want a car a cause action result
for every single word that you have hard memorized due to anki because what that
does is it does enable you to improvise if you get questions that were not on
that list how long should it take you to enter all 300 things
uh i've had students do it in like like a month it's kind of look around like if
they're doing a couple cards every single day like that's like 10 cards a
day right you do 10 cards a day that's 300 per month you know
you can take two months to do it and then that's five cards a day right but
the problem is that you start now folks that wait too long to start it's
it's just too much because we have some we have to we have
to do other stuff too to get ready for the job as well all right
action the step that you took it must be a positive action right no time to be

06:08
humble during the hunt what actions you take to solve that cause and it must be
positive stop talking down about yourself during interviews it does
nothing to be humble during an interview it does nothing to put yourself down
during an interview you're not going to put yourself down and they're magically
going to think that you're better because of it no stop it knock it off
number one thing i see when my students are interviewing is
they don't have the positive affirmations about themselves they don't
talk positively about themselves during an interview they feel like by by by
shielding some of the negativity they might get by saying oh yeah i messed
this up there no stand tall talk your talk present
yourself in a positive light because that's going to help you get past the
sniff test and talking to the nerds result
why are you better because of it how are you the best thing since sliced bread

06:09
because of what action you took to solve that cause
now if you're like leon i have a really hard time coming up with cause action
result well i did it live during stream we picked a random question on thursday
and i did it live so you can watch that back we're also going to do a car class
on friday so this friday we're going to walk through a bunch of questions i'm
going to do it live off the dome i'm not prepping them at all i'm going to show
i'm going to talk that talk right and then we're going to bring folks up to do
it as well and have a lot of fun with it so this friday we're gonna do a car
class so if you're like i'm having trouble formulating these car answers i
got you on friday technical questions that are on the bank
we use eu explanation use example where we give an explanation about
something we say where we might use it and we give an example so
the one we did on thursday was a css sprite so css sprite what it is is
it's one image that's made up of a bunch of smaller image the reason why we use
it is because it reduces the number of network requests we have to make which

06:10
can speed up our application an example is all the images that you see on amazon
like their logo all the little flourishes that's actually one image
that they're just showing you different pieces of so it's only one request to
amazon server to load behavioral questions you follow car
cause action result the technical questions that are on banky explanation
use example for each one and then we have our technical white boarding
the car class on friday be recorded probably not
most of the friday classes aren't being recorded because we bring people up live
yeah should i just quit my job because i'm never participating in interactive
classes no don't quit your job bad idea oh my my back's starting to hurt

06:11
my necks hurt i was like i've been sitting a little weird nobody
gave me a posture check today i blame y'all too late evan too late you fox
all right technical whiteboarding let's finish
this up and then we're gonna we'll end with a raid
you're all too late stop spending your stop wasting your channel points
i appreciate the posture check swamp all right technical whiteboarding uh we
talked about the skills behind whiteboarding but particularly when we
get to coding challenges we want to have prep in mind parameters returns example
pseudocode when you are doing your daily code wars at least 10 minutes should be
spent on prep yes for every code wars i don't care if it's
an aq i don't care if it's a 7q you should be spending like 10 minutes on prep

06:12
talking through all the parameters all right a number is coming in will only be
a number will always be a number will ever be anything that's not a number
will be positive will be negative will it be floated or a whole number right
talk through your parameters talk through your returns all right i i
when am i returning back to you i'm returning to your string will ever not
be a string will it ever be something that
gets in the way of returning that string
right examples write out your test cases code wars gives you your test cases get
used to either walking through them or writing your own and then break down
your program that you're going to write in terms of your pseudo code
we talked earlier today about our pseudo
code without the step by step the things you think you're going to do to solve
the problem and then solve when you are in an actual interview you should be
spending like almost 15 minutes on prep because remember
coding challenges test more than whether or not you can solve the challenge i
have had folks that have solved the coding challenges but don't get anywhere

06:13
near close to an offer because remember you're testing not only can you code do
i want to work with you for the next two years you could 360 slam dunk the
question but if you didn't communicate and
collaborate the whole time you might not get
to the next round so remember prep is more about getting you ready to solve
the problem but also to start off that communication that collaboration when
you get stuck if you have walk through prep the interviewer's probably going to
help you most interviewers are there to help they want to see you be successful
in the interview they want somebody else that can be writing code alongside with
them so they're not working late nights anymore a lot of companies are
are they tell their interviewers to give hints if the person is communicating so
prep is the foundation of our coding challenges we should be practicing it
with every challenge that we do so when we're in an interview it comes out
smooth like butter and we're gonna have lots of nights where we practice this
together so we're doing car on friday we're gonna do
prep classes we're gonna do eu classes we're gonna do a lot of this stuff where

06:14
you can see this process get better at it i know a lot of the members of the
stream team have been doing prep practice uh make sure that you're
watching that stream team channel because a lot of them are alumni are
folks that have gone through different portions of the program before you could
be learning a lot in the stream team streams if there are parts to process
that you're uncomfortable with at the moment cool
all right remember we got a lot of homework this weekend a lot of things
that are due that are coming up um for homework just
just to bring it up while we're here because we have quite a few things
uh i want you to read the this is this is old i want you to read the async
await on the mdn we have a youtube video to watch i want you to type out all the
examples that you see in that video uh and then doing the 19th you should

06:15
have started prepping the bank already uh you should have completed your
professional links you should have read the monitor javascript through dinosaurs
just get through it i know it's difficult reading same thing with the
crash course just get through it uh that way we're prepared for node next
week wireframe for your 100 hours project dude tuesday all right
new tuesday i found the video to be very heavy yeah i'm going to give you some
stuff that's lame i'm going to give you some stuff that's heavy you got to get
comfortable moving through more dense material because once you're on the job
there's not going to be a nice pretty example of it it's not going to be like
really well write out really well thought out documentation a lot of times
you're in the stuck and you got to figure it out so you're going to notice
i'm going to give you some stuff that a little bit more complicated i think a
little bit more heady a little bit more academic just to get you comfortable
remember the big thing we're learning here is how to learn how to deal with
stuff that's not spoon fed so that when we're on the job we can do it boom

06:16
all right folks let's go ahead and end with a lovely raid
as always let's do raids because you get the sweet sweet channel points
let's give somebody some some love some some follows if you haven't followed
them already all right we made it eight hours strong folks eight hours strong um
thank you for putting in the work um this this this is a

06:17
this is an experience i hope that you can take this time to review
i hope this kind of jog some things in your memory i hope this helps you get
ready for or the next part of our journey which is
back end web development i hope you get some rest tonight and i will see you all
on tuesday let's do a raid uh we're going to raid techy girl and
let's go ahead and open that up boom all right so
hope you had a wonderful rest of your day hope you have a good rest of your
sunday i will see you all on tuesday to get into our lovely async
await to get into our lovely back end with note i can't believe how far we've
come in just a few months together have a wonderful rest of your day folks
really really appreciate y'all give me some of your sunday eight hours to work

06:18
through this stuff let's go let's keep the love and positivity going if you
haven't given the follows yet let's go ahead and give it we're going over the
techie girl all right peace everybody have a gristy day peace youtube
